{"ast":null,"code":"import magazineSubscriberService from '../services/magazineSubscriberService';\nimport subscriptionService from '../services/subscriptionService';\nimport confirmationModal from './ConfirmationModal.vue';\nimport subscriptionModal from './SubscriptionModal.vue';\nexport default {\n  components: {\n    confirmationModal,\n    subscriptionModal\n  },\n  data() {\n    return {\n      subscriber: {},\n      activeSubscriptions: [],\n      inactiveSubscriptions: [],\n      plans: [],\n      showConfirmationModal: false,\n      showSubscriptionModal: false,\n      subscriptionToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscriber();\n    this.loadSubscriptions();\n    this.loadPlans();\n  },\n  methods: {\n    loadSubscriber() {\n      const subscriberId = this.$route.params.id;\n      magazineSubscriberService.getSubscriber(subscriberId).then(response => {\n        this.subscriber = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber details!\", error);\n      });\n    },\n    loadSubscriptions() {\n      const subscriberId = this.$route.params.id;\n      subscriptionService.getSubscriptions(subscriberId).then(response => {\n        this.activeSubscriptions = response.data.filter(subscription => subscription.active);\n        this.inactiveSubscriptions = response.data.filter(subscription => !subscription.active);\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriptions!\", error);\n      });\n    },\n    loadPlans() {\n      subscriptionService.getPlans().then(response => {\n        this.plans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the plans!\", error);\n      });\n    },\n    showAddSubscriptionModal() {\n      this.showSubscriptionModal = true;\n    },\n    hideSubscriptionModal() {\n      this.showSubscriptionModal = false;\n    },\n    saveSubscription(subscription) {\n      subscriptionService.createSubscription(subscription).then(() => {\n        this.loadSubscriptions();\n        this.hideSubscriptionModal();\n      }).catch(error => {\n        console.error(\"There was an error creating the subscription!\", error);\n      });\n    },\n    confirmDeleteSubscription(subscriptionId) {\n      this.subscriptionToDelete = subscriptionId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n    },\n    deleteSubscription() {\n      if (this.subscriptionToDelete) {\n        subscriptionService.deleteSubscription(this.subscriptionToDelete).then(() => {\n          this.loadSubscriptions();\n          this.hideDeleteModal();\n        }).catch(error => {\n          console.error(\"There was an error deleting the subscription!\", error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","subscriptionService","confirmationModal","subscriptionModal","components","data","subscriber","activeSubscriptions","inactiveSubscriptions","plans","showConfirmationModal","showSubscriptionModal","subscriptionToDelete","created","loadSubscriber","loadSubscriptions","loadPlans","methods","subscriberId","$route","params","id","getSubscriber","then","response","catch","error","console","getSubscriptions","filter","subscription","active","getPlans","showAddSubscriptionModal","hideSubscriptionModal","saveSubscription","createSubscription","confirmDeleteSubscription","subscriptionId","hideDeleteModal","deleteSubscription"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriberDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h2>Subscriber Details</h2>\r\n    <div class=\"card mb-3\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{ subscriber.name }}</h5>\r\n        <p class=\"card-text\">\r\n          <strong>Registration Number:</strong> {{ subscriber.registration_number }}<br>\r\n          <strong>City/Town:</strong> {{ subscriber.city_town }}<br>\r\n          <strong>State:</strong> {{ subscriber.state }}<br>\r\n          <strong>Phone:</strong> {{ subscriber.phone }}<br>\r\n          <strong>Email:</strong> {{ subscriber.email }}<br>\r\n          <strong>Category:</strong> {{ subscriber.category.name }}<br>\r\n          <strong>Type:</strong> {{ subscriber.stype.name }}<br>\r\n          <strong>Notes:</strong> {{ subscriber.notes }}<br>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Subscriptions</h3>\r\n    <button class=\"btn btn-primary mb-3\" @click=\"showAddSubscriptionModal\">Add Subscription</button>\r\n    <ul class=\"nav nav-tabs\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#activeSubscriptions\">Active Subscriptions</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" href=\"#inactiveSubscriptions\">Inactive Subscriptions</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"tab-content mt-3\">\r\n      <div id=\"activeSubscriptions\" class=\"tab-pane fade show active\">\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Plan</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"subscription in activeSubscriptions\" :key=\"subscription._id\">\r\n              <td>{{ subscription.subscription_plan.name }}</td>\r\n              <td>{{ subscription.start_date }}</td>\r\n              <td>{{ subscription.end_date }}</td>\r\n              <td>\r\n                <button class=\"btn btn-danger btn-sm\" @click=\"confirmDeleteSubscription(subscription._id)\">Delete</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div id=\"inactiveSubscriptions\" class=\"tab-pane fade\">\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Plan</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"subscription in inactiveSubscriptions\" :key=\"subscription._id\">\r\n              <td>{{ subscription.subscription_plan.name }}</td>\r\n              <td>{{ subscription.start_date }}</td>\r\n              <td>{{ subscription.end_date }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <confirmation-modal\r\n      v-if=\"showConfirmationModal\"\r\n      :show=\"showConfirmationModal\"\r\n      title=\"Confirm Delete\"\r\n      message=\"Are you sure you want to delete this subscription?\"\r\n      @close=\"hideDeleteModal\"\r\n      @confirm=\"deleteSubscription\"\r\n    />\r\n\r\n    <subscription-modal\r\n      v-if=\"showSubscriptionModal\"\r\n      :show=\"showSubscriptionModal\"\r\n      :subscriber-id=\"subscriber._id\"\r\n      :plans=\"plans\"\r\n      @close=\"hideSubscriptionModal\"\r\n      @save=\"saveSubscription\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '../services/magazineSubscriberService';\r\nimport subscriptionService from '../services/subscriptionService';\r\nimport confirmationModal from './ConfirmationModal.vue';\r\nimport subscriptionModal from './SubscriptionModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    confirmationModal,\r\n    subscriptionModal\r\n  },\r\n  data() {\r\n    return {\r\n      subscriber: {},\r\n      activeSubscriptions: [],\r\n      inactiveSubscriptions: [],\r\n      plans: [],\r\n      showConfirmationModal: false,\r\n      showSubscriptionModal: false,\r\n      subscriptionToDelete: null\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSubscriber();\r\n    this.loadSubscriptions();\r\n    this.loadPlans();\r\n  },\r\n  methods: {\r\n    loadSubscriber() {\r\n      const subscriberId = this.$route.params.id;\r\n      magazineSubscriberService.getSubscriber(subscriberId).then(response => {\r\n        this.subscriber = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriber details!\", error);\r\n      });\r\n    },\r\n    loadSubscriptions() {\r\n      const subscriberId = this.$route.params.id;\r\n      subscriptionService.getSubscriptions(subscriberId).then(response => {\r\n        this.activeSubscriptions = response.data.filter(subscription => subscription.active);\r\n        this.inactiveSubscriptions = response.data.filter(subscription => !subscription.active);\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriptions!\", error);\r\n      });\r\n    },\r\n    loadPlans() {\r\n      subscriptionService.getPlans().then(response => {\r\n        this.plans = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the plans!\", error);\r\n      });\r\n    },\r\n    showAddSubscriptionModal() {\r\n      this.showSubscriptionModal = true;\r\n    },\r\n    hideSubscriptionModal() {\r\n      this.showSubscriptionModal = false;\r\n    },\r\n    saveSubscription(subscription) {\r\n      subscriptionService.createSubscription(subscription).then(() => {\r\n        this.loadSubscriptions();\r\n        this.hideSubscriptionModal();\r\n      }).catch(error => {\r\n        console.error(\"There was an error creating the subscription!\", error);\r\n      });\r\n    },\r\n    confirmDeleteSubscription(subscriptionId) {\r\n      this.subscriptionToDelete = subscriptionId;\r\n      this.showConfirmationModal = true;\r\n    },\r\n    hideDeleteModal() {\r\n      this.showConfirmationModal = false;\r\n    },\r\n    deleteSubscription() {\r\n      if (this.subscriptionToDelete) {\r\n        subscriptionService.deleteSubscription(this.subscriptionToDelete).then(() => {\r\n          this.loadSubscriptions();\r\n          this.hideDeleteModal();\r\n        }).catch(error => {\r\n          console.error(\"There was an error deleting the subscription!\", error);\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}