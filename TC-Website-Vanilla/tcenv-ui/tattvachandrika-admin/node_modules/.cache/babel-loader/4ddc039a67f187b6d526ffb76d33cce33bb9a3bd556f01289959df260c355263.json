{"ast":null,"code":"import subscriptionService from '../services/subscriptionService';\nimport confirmationModal from './ConfirmationModal.vue';\nexport default {\n  components: {\n    confirmationModal\n  },\n  data() {\n    return {\n      plans: [],\n      languages: [],\n      modes: [],\n      editPlanId: null,\n      showConfirmationModal: false,\n      planToDelete: null\n    };\n  },\n  created() {\n    this.loadPlans();\n    this.loadLanguages();\n    this.loadModes();\n  },\n  methods: {\n    loadPlans() {\n      subscriptionService.getPlans().then(response => {\n        this.plans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription plans!\", error);\n      });\n    },\n    loadLanguages() {\n      subscriptionService.getLanguages().then(response => {\n        this.languages = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the languages!\", error);\n      });\n    },\n    loadModes() {\n      subscriptionService.getModes().then(response => {\n        this.modes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the modes!\", error);\n      });\n    },\n    addPlan() {\n      const newPlan = {\n        subscription_price: 0,\n        subscription_language: this.languages[0]._id,\n        subscription_mode: this.modes[0]._id,\n        duration_in_months: 0\n      };\n      this.plans.unshift(newPlan);\n      this.editPlanId = newPlan._id;\n    },\n    editPlan(planId) {\n      this.editPlanId = planId;\n    },\n    savePlan(plan) {\n      if (plan._id) {\n        subscriptionService.updatePlan(plan._id, plan).then(() => {\n          this.loadPlans();\n          this.editPlanId = null;\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription plan!\", error);\n        });\n      } else {\n        subscriptionService.createPlan(plan).then(() => {\n          this.loadPlans();\n          this.editPlanId = null;\n        }).catch(error => {\n          console.error(\"There was an error creating the subscription plan!\", error);\n        });\n      }\n    },\n    confirmDeletePlan(planId) {\n      this.planToDelete = planId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n    },\n    deletePlan() {\n      if (this.planToDelete) {\n        subscriptionService.deletePlan(this.planToDelete).then(() => {\n          this.loadPlans();\n          this.hideDeleteModal();\n        }).catch(error => {\n          console.error(\"There was an error deleting the subscription plan!\", error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["subscriptionService","confirmationModal","components","data","plans","languages","modes","editPlanId","showConfirmationModal","planToDelete","created","loadPlans","loadLanguages","loadModes","methods","getPlans","then","response","catch","error","console","getLanguages","getModes","addPlan","newPlan","subscription_price","subscription_language","_id","subscription_mode","duration_in_months","unshift","editPlan","planId","savePlan","plan","updatePlan","createPlan","confirmDeletePlan","hideDeleteModal","deletePlan"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriptionPlans.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscription Plans</li>\r\n      </ol>\r\n    </nav>\r\n    <h2>Subscription Plans</h2>\r\n    <button class=\"btn btn-primary mb-3\" @click=\"addPlan\">Add Subscription Plan</button>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Version</th>\r\n          <th>Start Date</th>\r\n          <th>Price</th>\r\n          <th>Language</th>\r\n          <th>Mode</th>\r\n          <th>Duration (Months)</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"plan in plans\" :key=\"plan._id\">\r\n          <td>{{ plan.name }}</td>\r\n          <td>{{ plan.version }}</td>\r\n          <td>{{ plan.start_date }}</td>\r\n          <td>\r\n            <input v-if=\"editPlanId === plan._id\" type=\"number\" v-model=\"plan.subscription_price\" />\r\n            <span v-else>{{ plan.subscription_price }}</span>\r\n          </td>\r\n          <td>\r\n            <select v-if=\"editPlanId === plan._id\" v-model=\"plan.subscription_language\">\r\n              <option v-for=\"language in languages\" :value=\"language._id\">{{ language.name }}</option>\r\n            </select>\r\n            <span v-else>{{ plan.subscription_language.name }}</span>\r\n          </td>\r\n          <td>\r\n            <select v-if=\"editPlanId === plan._id\" v-model=\"plan.subscription_mode\">\r\n              <option v-for=\"mode in modes\" :value=\"mode._id\">{{ mode.name }}</option>\r\n            </select>\r\n            <span v-else>{{ plan.subscription_mode.name }}</span>\r\n          </td>\r\n          <td>\r\n            <input v-if=\"editPlanId === plan._id\" type=\"number\" v-model=\"plan.duration_in_months\" />\r\n            <span v-else>{{ plan.duration_in_months }}</span>\r\n          </td>\r\n          <td>\r\n            <button class=\"btn btn-success btn-sm\" v-if=\"editPlanId === plan._id\" @click=\"savePlan(plan)\">Save</button>\r\n            <button class=\"btn btn-warning btn-sm\" v-else @click=\"editPlan(plan._id)\">Edit</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"confirmDeletePlan(plan._id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <confirmation-modal\r\n      v-if=\"showConfirmationModal\"\r\n      :show=\"showConfirmationModal\"\r\n      title=\"Confirm Delete\"\r\n      message=\"Are you sure you want to delete this subscription plan?\"\r\n      @close=\"hideDeleteModal\"\r\n      @confirm=\"deletePlan\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport subscriptionService from '../services/subscriptionService';\r\nimport confirmationModal from './ConfirmationModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    confirmationModal\r\n  },\r\n  data() {\r\n    return {\r\n      plans: [],\r\n      languages: [],\r\n      modes: [],\r\n      editPlanId: null,\r\n      showConfirmationModal: false,\r\n      planToDelete: null\r\n    };\r\n  },\r\n  created() {\r\n    this.loadPlans();\r\n    this.loadLanguages();\r\n    this.loadModes();\r\n  },\r\n  methods: {\r\n    loadPlans() {\r\n      subscriptionService.getPlans().then(response => {\r\n        this.plans = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscription plans!\", error);\r\n      });\r\n    },\r\n    loadLanguages() {\r\n      subscriptionService.getLanguages().then(response => {\r\n        this.languages = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the languages!\", error);\r\n      });\r\n    },\r\n    loadModes() {\r\n      subscriptionService.getModes().then(response => {\r\n        this.modes = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the modes!\", error);\r\n      });\r\n    },\r\n    addPlan() {\r\n      const newPlan = {\r\n        subscription_price: 0,\r\n        subscription_language: this.languages[0]._id,\r\n        subscription_mode: this.modes[0]._id,\r\n        duration_in_months: 0\r\n      };\r\n      this.plans.unshift(newPlan);\r\n      this.editPlanId = newPlan._id;\r\n    },\r\n    editPlan(planId) {\r\n      this.editPlanId = planId;\r\n    },\r\n    savePlan(plan) {\r\n      if (plan._id) {\r\n        subscriptionService.updatePlan(plan._id, plan).then(() => {\r\n          this.loadPlans();\r\n          this.editPlanId = null;\r\n        }).catch(error => {\r\n          console.error(\"There was an error updating the subscription plan!\", error);\r\n        });\r\n      } else {\r\n        subscriptionService.createPlan(plan).then(() => {\r\n          this.loadPlans();\r\n          this.editPlanId = null;\r\n        }).catch(error => {\r\n          console.error(\"There was an error creating the subscription plan!\", error);\r\n        });\r\n      }\r\n    },\r\n    confirmDeletePlan(planId) {\r\n      this.planToDelete = planId;\r\n      this.showConfirmationModal = true;\r\n    },\r\n    hideDeleteModal() {\r\n      this.showConfirmationModal = false;\r\n    },\r\n    deletePlan() {\r\n      if (this.planToDelete) {\r\n        subscriptionService.deletePlan(this.planToDelete).then(() => {\r\n          this.loadPlans();\r\n          this.hideDeleteModal();\r\n        }).catch(error => {\r\n          console.error(\"There was an error deleting the subscription plan!\", error);\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}