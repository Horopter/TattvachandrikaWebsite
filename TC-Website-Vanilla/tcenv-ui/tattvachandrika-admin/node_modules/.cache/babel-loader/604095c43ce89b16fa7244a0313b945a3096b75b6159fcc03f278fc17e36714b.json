{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport subscriberService from '../services/subscriberService';\nimport confirmationModal from './ConfirmationModal.vue';\nimport subscriberModal from './SubscriberModal.vue';\nexport default {\n  components: {\n    confirmationModal,\n    subscriberModal\n  },\n  data() {\n    return {\n      subscribers: [],\n      showConfirmationModal: false,\n      showSubscriberModal: false,\n      selectedSubscriber: null,\n      categories: [],\n      types: [],\n      subscriberToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscribers();\n    this.loadCategories();\n    this.loadTypes();\n  },\n  methods: {\n    loadSubscribers() {\n      subscriberService.getSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscribers!\", error);\n      });\n    },\n    loadCategories() {\n      subscriberService.getCategories().then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the categories!\", error);\n      });\n    },\n    loadTypes() {\n      subscriberService.getTypes().then(response => {\n        this.types = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the types!\", error);\n      });\n    },\n    startAddingNew() {\n      this.selectedSubscriber = {\n        name: '',\n        registration_number: '',\n        city_town: '',\n        state: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        hasActiveSubscriptions: false\n      };\n      this.showSubscriberModal = true;\n    },\n    viewSubscriber(subscriber) {\n      this.$router.push({\n        name: 'SubscriberDetails',\n        params: {\n          id: subscriber._id\n        }\n      });\n    },\n    editSubscriber(subscriber) {\n      this.selectedSubscriber = {\n        ...subscriber\n      };\n      this.showSubscriberModal = true;\n    },\n    saveSubscriber(subscriber) {\n      if (subscriber._id) {\n        subscriberService.updateSubscriber(subscriber._id, subscriber).then(() => {\n          this.loadSubscribers();\n          this.showSubscriberModal = false;\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber!\", error);\n        });\n      } else {\n        subscriberService.createSubscriber(subscriber).then(() => {\n          this.loadSubscribers();\n          this.showSubscriberModal = false;\n        }).catch(error => {\n          console.error(\"There was an error creating the subscriber!\", error);\n        });\n      }\n    },\n    showDeleteModal(subscriberId) {\n      this.subscriberToDelete = subscriberId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n      this.subscriberToDelete = null;\n    },\n    deleteSubscriber() {\n      subscriberService.deleteSubscriber(this.subscriberToDelete).then(() => {\n        this.loadSubscribers();\n        this.hideDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat._id === categoryId);\n      return category ? category.name : '';\n    },\n    getTypeName(typeId) {\n      const type = this.types.find(typ => typ._id === typeId);\n      return type ? type.name : '';\n    }\n  }\n};","map":{"version":3,"names":["subscriberService","confirmationModal","subscriberModal","components","data","subscribers","showConfirmationModal","showSubscriberModal","selectedSubscriber","categories","types","subscriberToDelete","created","loadSubscribers","loadCategories","loadTypes","methods","getSubscribers","then","response","catch","error","console","getCategories","getTypes","startAddingNew","name","registration_number","city_town","state","phone","email","category","stype","hasActiveSubscriptions","viewSubscriber","subscriber","$router","push","params","id","_id","editSubscriber","saveSubscriber","updateSubscriber","createSubscriber","showDeleteModal","subscriberId","hideDeleteModal","deleteSubscriber","getCategoryName","categoryId","find","cat","getTypeName","typeId","type","typ"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscribers.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscribers</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscribers</li>\n      </ol>\n    </nav>\n\n    <button class=\"btn btn-success mt-3\" @click=\"startAddingNew\">Add New Subscriber</button>\n\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Registration Number</th>\n          <th>City/Town</th>\n          <th>State</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Category</th>\n          <th>Type</th>\n          <th>Active Subscriptions</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"subscriber in subscribers\" :key=\"subscriber._id\">\n          <td>{{ subscriber.name }}</td>\n          <td>{{ subscriber.registration_number }}</td>\n          <td>{{ subscriber.city_town }}</td>\n          <td>{{ subscriber.state }}</td>\n          <td>{{ subscriber.phone }}</td>\n          <td>{{ subscriber.email }}</td>\n          <td>{{ getCategoryName(subscriber.category) }}</td>\n          <td>{{ getTypeName(subscriber.stype) }}</td>\n          <td>{{ subscriber.hasActiveSubscriptions }}</td>\n          <td>\n            <button class=\"btn btn-primary btn-sm\" @click=\"viewSubscriber(subscriber)\">View</button>\n            <button class=\"btn btn-warning btn-sm\" @click=\"editSubscriber(subscriber)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"showDeleteModal(subscriber._id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <confirmation-modal\n      v-if=\"showConfirmationModal\"\n      :show=\"showConfirmationModal\"\n      title=\"Confirm Delete\"\n      message=\"Are you sure you want to delete this subscriber?\"\n      @close=\"hideDeleteModal\"\n      @confirm=\"deleteSubscriber\"\n    />\n\n    <subscriber-modal\n      v-if=\"showSubscriberModal\"\n      :show=\"showSubscriberModal\"\n      :subscriber=\"selectedSubscriber\"\n      :categories=\"categories\"\n      :types=\"types\"\n      @close=\"hideSubscriberModal\"\n      @save=\"saveSubscriber\"\n    />\n  </div>\n</template>\n\n<script>\nimport subscriberService from '../services/subscriberService';\nimport confirmationModal from './ConfirmationModal.vue';\nimport subscriberModal from './SubscriberModal.vue';\n\nexport default {\n  components: {\n    confirmationModal,\n    subscriberModal\n  },\n  data() {\n    return {\n      subscribers: [],\n      showConfirmationModal: false,\n      showSubscriberModal: false,\n      selectedSubscriber: null,\n      categories: [],\n      types: [],\n      subscriberToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscribers();\n    this.loadCategories();\n    this.loadTypes();\n  },\n  methods: {\n    loadSubscribers() {\n      subscriberService.getSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscribers!\", error);\n      });\n    },\n    loadCategories() {\n      subscriberService.getCategories().then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the categories!\", error);\n      });\n    },\n    loadTypes() {\n      subscriberService.getTypes().then(response => {\n        this.types = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the types!\", error);\n      });\n    },\n    startAddingNew() {\n      this.selectedSubscriber = {\n        name: '',\n        registration_number: '',\n        city_town: '',\n        state: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        hasActiveSubscriptions: false\n      };\n      this.showSubscriberModal = true;\n    },\n    viewSubscriber(subscriber) {\n      this.$router.push({ name: 'SubscriberDetails', params: { id: subscriber._id } });\n    },\n    editSubscriber(subscriber) {\n      this.selectedSubscriber = { ...subscriber };\n      this.showSubscriberModal = true;\n    },\n    saveSubscriber(subscriber) {\n      if (subscriber._id) {\n        subscriberService.updateSubscriber(subscriber._id, subscriber).then(() => {\n          this.loadSubscribers();\n          this.showSubscriberModal = false;\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber!\", error);\n        });\n      } else {\n        subscriberService.createSubscriber(subscriber).then(() => {\n          this.loadSubscribers();\n          this.showSubscriberModal = false;\n        }).catch(error => {\n          console.error(\"There was an error creating the subscriber!\", error);\n        });\n      }\n    },\n    showDeleteModal(subscriberId) {\n      this.subscriberToDelete = subscriberId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n      this.subscriberToDelete = null;\n    },\n    deleteSubscriber() {\n      subscriberService.deleteSubscriber(this.subscriberToDelete).then(() => {\n        this.loadSubscribers();\n        this.hideDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat._id === categoryId);\n      return category ? category.name : '';\n    },\n    getTypeName(typeId) {\n      const type = this.types.find(typ => typ._id === typeId);\n      return type ? type.name : '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}