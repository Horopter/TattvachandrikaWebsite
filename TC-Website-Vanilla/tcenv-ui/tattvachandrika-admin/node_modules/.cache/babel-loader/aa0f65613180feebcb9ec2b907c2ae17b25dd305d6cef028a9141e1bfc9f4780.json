{"ast":null,"code":"import subscriberService from '../services/subscriberService';\nimport subscriberCategoryService from '../services/subscriberCategoryService';\nimport subscriberTypeService from '../services/subscriberTypeService';\nexport default {\n  data() {\n    return {\n      subscribers: [],\n      subscriberCategories: [],\n      subscriberTypes: [],\n      subscriberForm: {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      },\n      editSubscriber: null\n    };\n  },\n  created() {\n    this.loadSubscribers();\n    this.loadSubscriberCategories();\n    this.loadSubscriberTypes();\n  },\n  methods: {\n    loadSubscribers() {\n      subscriberService.getSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscribers!\", error);\n      });\n    },\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    loadSubscriberTypes() {\n      subscriberTypeService.getSubscriberTypes().then(response => {\n        this.subscriberTypes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber types!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.subscriberCategories.find(cat => cat._id === categoryId);\n      return category ? category.name : 'Unknown';\n    },\n    getTypeName(typeId) {\n      const type = this.subscriberTypes.find(typ => typ._id === typeId);\n      return type ? type.name : 'Unknown';\n    },\n    addSubscriber() {\n      if (this.subscriberForm.name.trim()) {\n        subscriberService.createSubscriber(this.subscriberForm).then(() => {\n          this.loadSubscribers();\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error adding the subscriber!\", error);\n        });\n      }\n    },\n    editSubscriber(subscriber) {\n      this.editSubscriber = {\n        ...subscriber\n      };\n      this.subscriberForm = {\n        ...subscriber\n      };\n    },\n    updateSubscriber() {\n      if (this.subscriberForm.name.trim()) {\n        subscriberService.updateSubscriber(this.editSubscriber._id, this.subscriberForm).then(() => {\n          this.loadSubscribers();\n          this.editSubscriber = null;\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber!\", error);\n        });\n      }\n    },\n    deleteSubscriber(id) {\n      subscriberService.deleteSubscriber(id).then(() => {\n        this.loadSubscribers();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriber = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.subscriberForm = {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      };\n    }\n  }\n};","map":{"version":3,"names":["subscriberService","subscriberCategoryService","subscriberTypeService","data","subscribers","subscriberCategories","subscriberTypes","subscriberForm","name","registration_number","address","city_town","state","pincode","phone","email","category","stype","notes","active","editSubscriber","created","loadSubscribers","loadSubscriberCategories","loadSubscriberTypes","methods","getSubscribers","then","response","catch","error","console","getSubscriberCategories","getSubscriberTypes","getCategoryName","categoryId","find","cat","_id","getTypeName","typeId","type","typ","addSubscriber","trim","createSubscriber","resetForm","subscriber","updateSubscriber","deleteSubscriber","id","cancelEdit"],"sources":["C:\\Users\\santoshdesai\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscribersOfMagazine.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscribers</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscribers</li>\n      </ol>\n    </nav>\n\n    <!-- Add Subscriber Form -->\n    <form @submit.prevent=\"addSubscriber\">\n      <div class=\"mb-3\">\n        <label for=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          v-model=\"subscriberForm.name\"\n          placeholder=\"Name\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"registration_number\">Registration Number</label>\n        <input\n          type=\"text\"\n          id=\"registration_number\"\n          v-model=\"subscriberForm.registration_number\"\n          placeholder=\"Registration Number\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"address\">Address</label>\n        <input\n          type=\"text\"\n          id=\"address\"\n          v-model=\"subscriberForm.address\"\n          placeholder=\"Address\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"city_town\">City/Town</label>\n        <input\n          type=\"text\"\n          id=\"city_town\"\n          v-model=\"subscriberForm.city_town\"\n          placeholder=\"City/Town\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"state\">State</label>\n        <input\n          type=\"text\"\n          id=\"state\"\n          v-model=\"subscriberForm.state\"\n          placeholder=\"State\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"pincode\">Pincode</label>\n        <input\n          type=\"text\"\n          id=\"pincode\"\n          v-model=\"subscriberForm.pincode\"\n          placeholder=\"Pincode\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          id=\"phone\"\n          v-model=\"subscriberForm.phone\"\n          placeholder=\"Phone\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          v-model=\"subscriberForm.email\"\n          placeholder=\"Email\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"category\">Category</label>\n        <select id=\"category\" v-model=\"subscriberForm.category\" class=\"form-control\">\n          <option v-for=\"category in subscriberCategories\" :key=\"category._id\" :value=\"category._id\">{{ category.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"stype\">Type</label>\n        <select id=\"stype\" v-model=\"subscriberForm.stype\" class=\"form-control\">\n          <option v-for=\"type in subscriberTypes\" :key=\"type._id\" :value=\"type._id\">{{ type.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"notes\">Notes</label>\n        <textarea\n          id=\"notes\"\n          v-model=\"subscriberForm.notes\"\n          placeholder=\"Notes\"\n          class=\"form-control\"\n        ></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"active\">Active</label>\n        <input\n          type=\"checkbox\"\n          id=\"active\"\n          v-model=\"subscriberForm.active\"\n          class=\"form-check-input\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add</button>\n    </form>\n\n    <!-- Edit Subscriber Form (conditional) -->\n    <div v-if=\"editSubscriber\">\n      <h3>Edit Subscriber</h3>\n      <form @submit.prevent=\"updateSubscriber\">\n        <!-- Similar form fields as add form -->\n      </form>\n    </div>\n\n    <!-- Subscribers Table -->\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Registration Number</th>\n          <th>Address</th>\n          <th>City/Town</th>\n          <th>State</th>\n          <th>Pincode</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Category</th>\n          <th>Type</th>\n          <th>Notes</th>\n          <th>Active</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"subscriber in subscribers\" :key=\"subscriber._id\">\n          <td>{{ subscriber.name }}</td>\n          <td>{{ subscriber.registration_number }}</td>\n          <td>{{ subscriber.address }}</td>\n          <td>{{ subscriber.city_town }}</td>\n          <td>{{ subscriber.state }}</td>\n          <td>{{ subscriber.pincode }}</td>\n          <td>{{ subscriber.phone }}</td>\n          <td>{{ subscriber.email }}</td>\n          <td>{{ getCategoryName(subscriber.category) }}</td>\n          <td>{{ getTypeName(subscriber.stype) }}</td>\n          <td>{{ subscriber.notes }}</td>\n          <td>{{ subscriber.active ? 'Yes' : 'No' }}</td>\n          <td>\n            <button class=\"btn btn-warning btn-sm\" @click=\"editSubscriber(subscriber)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteSubscriber(subscriber._id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport subscriberService from '../services/subscriberService';\nimport subscriberCategoryService from '../services/subscriberCategoryService';\nimport subscriberTypeService from '../services/subscriberTypeService';\n\nexport default {\n  data() {\n    return {\n      subscribers: [],\n      subscriberCategories: [],\n      subscriberTypes: [],\n      subscriberForm: {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      },\n      editSubscriber: null\n    };\n  },\n  created() {\n    this.loadSubscribers();\n    this.loadSubscriberCategories();\n    this.loadSubscriberTypes();\n  },\n  methods: {\n    loadSubscribers() {\n      subscriberService.getSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscribers!\", error);\n      });\n    },\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    loadSubscriberTypes() {\n      subscriberTypeService.getSubscriberTypes().then(response => {\n        this.subscriberTypes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber types!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.subscriberCategories.find(cat => cat._id === categoryId);\n      return category ? category.name : 'Unknown';\n    },\n    getTypeName(typeId) {\n      const type = this.subscriberTypes.find(typ => typ._id === typeId);\n      return type ? type.name : 'Unknown';\n    },\n    addSubscriber() {\n      if (this.subscriberForm.name.trim()) {\n        subscriberService.createSubscriber(this.subscriberForm).then(() => {\n          this.loadSubscribers();\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error adding the subscriber!\", error);\n        });\n      }\n    },\n    editSubscriber(subscriber) {\n      this.editSubscriber = { ...subscriber };\n      this.subscriberForm = { ...subscriber };\n    },\n    updateSubscriber() {\n      if (this.subscriberForm.name.trim()) {\n        subscriberService.updateSubscriber(this.editSubscriber._id, this.subscriberForm).then(() => {\n          this.loadSubscribers();\n          this.editSubscriber = null;\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber!\", error);\n        });\n      }\n    },\n    deleteSubscriber(id) {\n      subscriberService.deleteSubscriber(id).then(() => {\n        this.loadSubscribers();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriber = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.subscriberForm = {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}