{"ast":null,"code":"import magazineSubscriberService from '../services/magazineSubscriberService';\nimport confirmationModal from './ConfirmationModal.vue';\nimport subscriberModal from './SubscriberModal.vue';\nexport default {\n  components: {\n    confirmationModal,\n    subscriberModal\n  },\n  data() {\n    return {\n      subscribers: [],\n      categories: [],\n      types: [],\n      selectedSubscriber: null,\n      showSubscriberModal: false,\n      showConfirmationModal: false,\n      subscriberToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscribers();\n    this.loadCategories();\n    this.loadTypes();\n  },\n  methods: {\n    loadSubscribers() {\n      magazineSubscriberService.getSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscribers!\", error);\n      });\n    },\n    loadCategories() {\n      magazineSubscriberService.getCategories().then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the categories!\", error);\n      });\n    },\n    loadTypes() {\n      magazineSubscriberService.getTypes().then(response => {\n        this.types = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the types!\", error);\n      });\n    },\n    showAddSubscriberModal() {\n      this.selectedSubscriber = null;\n      this.showSubscriberModal = true;\n    },\n    editSubscriber(subscriber) {\n      this.selectedSubscriber = subscriber;\n      this.showSubscriberModal = true;\n    },\n    saveSubscriber(subscriber) {\n      if (subscriber._id) {\n        magazineSubscriberService.updateSubscriber(subscriber._id, subscriber).then(() => {\n          this.loadSubscribers();\n          this.hideSubscriberModal();\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber!\", error);\n        });\n      } else {\n        magazineSubscriberService.createSubscriber(subscriber).then(() => {\n          this.loadSubscribers();\n          this.hideSubscriberModal();\n        }).catch(error => {\n          console.error(\"There was an error creating the subscriber!\", error);\n        });\n      }\n    },\n    confirmDeleteSubscriber(subscriberId) {\n      this.subscriberToDelete = subscriberId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n    },\n    deleteSubscriber() {\n      if (this.subscriberToDelete) {\n        magazineSubscriberService.deleteSubscriber(this.subscriberToDelete).then(() => {\n          this.loadSubscribers();\n          this.hideDeleteModal();\n        }).catch(error => {\n          console.error(\"There was an error deleting the subscriber!\", error);\n        });\n      }\n    },\n    hideSubscriberModal() {\n      this.showSubscriberModal = false;\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","confirmationModal","subscriberModal","components","data","subscribers","categories","types","selectedSubscriber","showSubscriberModal","showConfirmationModal","subscriberToDelete","created","loadSubscribers","loadCategories","loadTypes","methods","getSubscribers","then","response","catch","error","console","getCategories","getTypes","showAddSubscriberModal","editSubscriber","subscriber","saveSubscriber","_id","updateSubscriber","hideSubscriberModal","createSubscriber","confirmDeleteSubscriber","subscriberId","hideDeleteModal","deleteSubscriber"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscribers.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscribers</li>\r\n      </ol>\r\n    </nav>\r\n    <h2>Subscribers</h2>\r\n    <button class=\"btn btn-primary mb-3\" @click=\"showAddSubscriberModal\">Add Subscriber</button>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Registration Number</th>\r\n          <th>City/Town</th>\r\n          <th>State</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Category</th>\r\n          <th>Type</th>\r\n          <th>Active Subscriptions</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"subscriber in subscribers\" :key=\"subscriber._id\">\r\n          <td><router-link :to=\"{ name: 'SubscriberDetail', params: { id: subscriber._id }}\">{{ subscriber.name }}</router-link></td>\r\n          <td>{{ subscriber.registration_number }}</td>\r\n          <td>{{ subscriber.city_town }}</td>\r\n          <td>{{ subscriber.state }}</td>\r\n          <td>{{ subscriber.phone }}</td>\r\n          <td>{{ subscriber.email }}</td>\r\n          <td>{{ subscriber.category.name }}</td>\r\n          <td>{{ subscriber.stype.name }}</td>\r\n          <td>{{ subscriber.hasActiveSubscriptions }}</td>\r\n          <td>\r\n            <button class=\"btn btn-warning btn-sm\" @click=\"editSubscriber(subscriber)\">Edit</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"confirmDeleteSubscriber(subscriber._id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <confirmation-modal\r\n      v-if=\"showConfirmationModal\"\r\n      :show=\"showConfirmationModal\"\r\n      title=\"Confirm Delete\"\r\n      message=\"Are you sure you want to delete this subscriber?\"\r\n      @close=\"hideDeleteModal\"\r\n      @confirm=\"deleteSubscriber\"\r\n    />\r\n\r\n    <subscriber-modal\r\n      v-if=\"showSubscriberModal\"\r\n      :show=\"showSubscriberModal\"\r\n      :subscriber=\"selectedSubscriber\"\r\n      :categories=\"categories\"\r\n      :types=\"types\"\r\n      @close=\"hideSubscriberModal\"\r\n      @save=\"saveSubscriber\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '../services/magazineSubscriberService';\r\nimport confirmationModal from './ConfirmationModal.vue';\r\nimport subscriberModal from './SubscriberModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    confirmationModal,\r\n    subscriberModal\r\n  },\r\n  data() {\r\n    return {\r\n      subscribers: [],\r\n      categories: [],\r\n      types: [],\r\n      selectedSubscriber: null,\r\n      showSubscriberModal: false,\r\n      showConfirmationModal: false,\r\n      subscriberToDelete: null\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSubscribers();\r\n    this.loadCategories();\r\n    this.loadTypes();\r\n  },\r\n  methods: {\r\n    loadSubscribers() {\r\n      magazineSubscriberService.getSubscribers().then(response => {\r\n        this.subscribers = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscribers!\", error);\r\n      });\r\n    },\r\n    loadCategories() {\r\n      magazineSubscriberService.getCategories().then(response => {\r\n        this.categories = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the categories!\", error);\r\n      });\r\n    },\r\n    loadTypes() {\r\n      magazineSubscriberService.getTypes().then(response => {\r\n        this.types = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the types!\", error);\r\n      });\r\n    },\r\n    showAddSubscriberModal() {\r\n      this.selectedSubscriber = null;\r\n      this.showSubscriberModal = true;\r\n    },\r\n    editSubscriber(subscriber) {\r\n      this.selectedSubscriber = subscriber;\r\n      this.showSubscriberModal = true;\r\n    },\r\n    saveSubscriber(subscriber) {\r\n      if (subscriber._id) {\r\n        magazineSubscriberService.updateSubscriber(subscriber._id, subscriber).then(() => {\r\n          this.loadSubscribers();\r\n          this.hideSubscriberModal();\r\n        }).catch(error => {\r\n          console.error(\"There was an error updating the subscriber!\", error);\r\n        });\r\n      } else {\r\n        magazineSubscriberService.createSubscriber(subscriber).then(() => {\r\n          this.loadSubscribers();\r\n          this.hideSubscriberModal();\r\n        }).catch(error => {\r\n          console.error(\"There was an error creating the subscriber!\", error);\r\n        });\r\n      }\r\n    },\r\n    confirmDeleteSubscriber(subscriberId) {\r\n      this.subscriberToDelete = subscriberId;\r\n      this.showConfirmationModal = true;\r\n    },\r\n    hideDeleteModal() {\r\n      this.showConfirmationModal = false;\r\n    },\r\n    deleteSubscriber() {\r\n      if (this.subscriberToDelete) {\r\n        magazineSubscriberService.deleteSubscriber(this.subscriberToDelete).then(() => {\r\n          this.loadSubscribers();\r\n          this.hideDeleteModal();\r\n        }).catch(error => {\r\n          console.error(\"There was an error deleting the subscriber!\", error);\r\n        });\r\n      }\r\n    },\r\n    hideSubscriberModal() {\r\n      this.showSubscriberModal = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}