{"ast":null,"code":"import magazineSubscriberService from '../services/magazineSubscriberService';\nimport subscriberCategoryService from '../services/subscriberCategoryService';\nimport subscriberTypeService from '../services/subscriberTypeService';\nexport default {\n  data() {\n    return {\n      magazineSubscribers: [],\n      subscriberCategories: [],\n      subscriberTypes: [],\n      magazineSubscriberForm: {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      },\n      editMagazineSubscriber: null\n    };\n  },\n  created() {\n    this.loadMagazineSubscribers();\n    this.loadSubscriberCategories();\n    this.loadSubscriberTypes();\n  },\n  methods: {\n    loadMagazineSubscribers() {\n      magazineSubscriberService.getMagazineSubscribers().then(response => {\n        this.magazineSubscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the magazine subscribers!\", error);\n      });\n    },\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    loadSubscriberTypes() {\n      subscriberTypeService.getSubscriberTypes().then(response => {\n        this.subscriberTypes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber types!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.subscriberCategories.find(cat => cat._id === categoryId);\n      return category ? category.name : 'Unknown';\n    },\n    getTypeName(typeId) {\n      const type = this.subscriberTypes.find(typ => typ._id === typeId);\n      return type ? type.name : 'Unknown';\n    },\n    addMagazineSubscriber() {\n      if (this.magazineSubscriberForm.name.trim()) {\n        magazineSubscriberService.createMagazineSubscriber(this.magazineSubscriberForm).then(() => {\n          this.loadMagazineSubscribers();\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error adding the magazine subscriber!\", error);\n        });\n      }\n    },\n    editMagazineSubscriber(magazineSubscriber) {\n      this.editMagazineSubscriber = {\n        ...magazineSubscriber\n      };\n      this.magazineSubscriberForm = {\n        ...magazineSubscriber\n      };\n    },\n    updateMagazineSubscriber() {\n      if (this.magazineSubscriberForm.name.trim()) {\n        magazineSubscriberService.updateMagazineSubscriber(this.editMagazineSubscriber._id, this.magazineSubscriberForm).then(() => {\n          this.loadMagazineSubscribers();\n          this.editMagazineSubscriber = null;\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error updating the magazine subscriber!\", error);\n        });\n      }\n    },\n    deleteMagazineSubscriber(id) {\n      magazineSubscriberService.deleteMagazineSubscriber(id).then(() => {\n        this.loadMagazineSubscribers();\n      }).catch(error => {\n        console.error(\"There was an error deleting the magazine subscriber!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editMagazineSubscriber = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.magazineSubscriberForm = {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      };\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","subscriberCategoryService","subscriberTypeService","data","magazineSubscribers","subscriberCategories","subscriberTypes","magazineSubscriberForm","name","registration_number","address","city_town","state","pincode","phone","email","category","stype","notes","active","editMagazineSubscriber","created","loadMagazineSubscribers","loadSubscriberCategories","loadSubscriberTypes","methods","getMagazineSubscribers","then","response","catch","error","console","getSubscriberCategories","getSubscriberTypes","getCategoryName","categoryId","find","cat","_id","getTypeName","typeId","type","typ","addMagazineSubscriber","trim","createMagazineSubscriber","resetForm","magazineSubscriber","updateMagazineSubscriber","deleteMagazineSubscriber","id","cancelEdit"],"sources":["C:\\Users\\santoshdesai\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscribers.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Magazine Subscribers</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Magazine Subscribers</li>\n      </ol>\n    </nav>\n\n    <!-- Add Subscriber Form -->\n    <form @submit.prevent=\"addMagazineSubscriber\">\n      <div class=\"mb-3\">\n        <label for=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          v-model=\"magazineSubscriberForm.name\"\n          placeholder=\"Name\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"registration_number\">Registration Number</label>\n        <input\n          type=\"text\"\n          id=\"registration_number\"\n          v-model=\"magazineSubscriberForm.registration_number\"\n          placeholder=\"Registration Number\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"address\">Address</label>\n        <input\n          type=\"text\"\n          id=\"address\"\n          v-model=\"magazineSubscriberForm.address\"\n          placeholder=\"Address\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"city_town\">City/Town</label>\n        <input\n          type=\"text\"\n          id=\"city_town\"\n          v-model=\"magazineSubscriberForm.city_town\"\n          placeholder=\"City/Town\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"state\">State</label>\n        <input\n          type=\"text\"\n          id=\"state\"\n          v-model=\"magazineSubscriberForm.state\"\n          placeholder=\"State\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"pincode\">Pincode</label>\n        <input\n          type=\"text\"\n          id=\"pincode\"\n          v-model=\"magazineSubscriberForm.pincode\"\n          placeholder=\"Pincode\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          id=\"phone\"\n          v-model=\"magazineSubscriberForm.phone\"\n          placeholder=\"Phone\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          v-model=\"magazineSubscriberForm.email\"\n          placeholder=\"Email\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"category\">Category</label>\n        <select id=\"category\" v-model=\"magazineSubscriberForm.category\" class=\"form-control\">\n          <option v-for=\"category in subscriberCategories\" :key=\"category._id\" :value=\"category._id\">{{ category.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"stype\">Type</label>\n        <select id=\"stype\" v-model=\"magazineSubscriberForm.stype\" class=\"form-control\">\n          <option v-for=\"type in subscriberTypes\" :key=\"type._id\" :value=\"type._id\">{{ type.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"notes\">Notes</label>\n        <textarea\n          id=\"notes\"\n          v-model=\"magazineSubscriberForm.notes\"\n          placeholder=\"Notes\"\n          class=\"form-control\"\n        ></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"active\">Active</label>\n        <input\n          type=\"checkbox\"\n          id=\"active\"\n          v-model=\"magazineSubscriberForm.active\"\n          class=\"form-check-input\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add</button>\n    </form>\n\n    <!-- Edit Subscriber Form (conditional) -->\n    <div v-if=\"editMagazineSubscriber\">\n      <h3>Edit Magazine Subscriber</h3>\n      <form @submit.prevent=\"updateMagazineSubscriber\">\n        <!-- Similar form fields as add form -->\n      </form>\n    </div>\n\n    <!-- Subscribers Table -->\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Registration Number</th>\n          <th>Address</th>\n          <th>City/Town</th>\n          <th>State</th>\n          <th>Pincode</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Category</th>\n          <th>Type</th>\n          <th>Notes</th>\n          <th>Active</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"magazineSubscriber in magazineSubscribers\" :key=\"magazineSubscriber._id\">\n          <td>{{ magazineSubscriber.name }}</td>\n          <td>{{ magazineSubscriber.registration_number }}</td>\n          <td>{{ magazineSubscriber.address }}</td>\n          <td>{{ magazineSubscriber.city_town }}</td>\n          <td>{{ magazineSubscriber.state }}</td>\n          <td>{{ magazineSubscriber.pincode }}</td>\n          <td>{{ magazineSubscriber.phone }}</td>\n          <td>{{ magazineSubscriber.email }}</td>\n          <td>{{ getCategoryName(magazineSubscriber.category) }}</td>\n          <td>{{ getTypeName(magazineSubscriber.stype) }}</td>\n          <td>{{ magazineSubscriber.notes }}</td>\n          <td>{{ magazineSubscriber.active ? 'Yes' : 'No' }}</td>\n          <td>\n            <button class=\"btn btn-warning btn-sm\" @click=\"editMagazineSubscriber(magazineSubscriber)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteMagazineSubscriber(magazineSubscriber._id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport magazineSubscriberService from '../services/magazineSubscriberService';\nimport subscriberCategoryService from '../services/subscriberCategoryService';\nimport subscriberTypeService from '../services/subscriberTypeService';\n\nexport default {\n  data() {\n    return {\n      magazineSubscribers: [],\n      subscriberCategories: [],\n      subscriberTypes: [],\n      magazineSubscriberForm: {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      },\n      editMagazineSubscriber: null\n    };\n  },\n  created() {\n    this.loadMagazineSubscribers();\n    this.loadSubscriberCategories();\n    this.loadSubscriberTypes();\n  },\n  methods: {\n    loadMagazineSubscribers() {\n      magazineSubscriberService.getMagazineSubscribers().then(response => {\n        this.magazineSubscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the magazine subscribers!\", error);\n      });\n    },\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    loadSubscriberTypes() {\n      subscriberTypeService.getSubscriberTypes().then(response => {\n        this.subscriberTypes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber types!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.subscriberCategories.find(cat => cat._id === categoryId);\n      return category ? category.name : 'Unknown';\n    },\n    getTypeName(typeId) {\n      const type = this.subscriberTypes.find(typ => typ._id === typeId);\n      return type ? type.name : 'Unknown';\n    },\n    addMagazineSubscriber() {\n      if (this.magazineSubscriberForm.name.trim()) {\n        magazineSubscriberService.createMagazineSubscriber(this.magazineSubscriberForm).then(() => {\n          this.loadMagazineSubscribers();\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error adding the magazine subscriber!\", error);\n        });\n      }\n    },\n    editMagazineSubscriber(magazineSubscriber) {\n      this.editMagazineSubscriber = { ...magazineSubscriber };\n      this.magazineSubscriberForm = { ...magazineSubscriber };\n    },\n    updateMagazineSubscriber() {\n      if (this.magazineSubscriberForm.name.trim()) {\n        magazineSubscriberService.updateMagazineSubscriber(this.editMagazineSubscriber._id, this.magazineSubscriberForm).then(() => {\n          this.loadMagazineSubscribers();\n          this.editMagazineSubscriber = null;\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error updating the magazine subscriber!\", error);\n        });\n      }\n    },\n    deleteMagazineSubscriber(id) {\n      magazineSubscriberService.deleteMagazineSubscriber(id).then(() => {\n        this.loadMagazineSubscribers();\n      }).catch(error => {\n        console.error(\"There was an error deleting the magazine subscriber!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editMagazineSubscriber = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.magazineSubscriberForm = {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: '',\n        active: true\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}