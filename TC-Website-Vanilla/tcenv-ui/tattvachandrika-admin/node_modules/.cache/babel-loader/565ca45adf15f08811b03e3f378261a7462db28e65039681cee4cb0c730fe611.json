{"ast":null,"code":"import subscriberCategoryService from '../services/subscriberCategoryService';\nimport ConfirmationModal from './ConfirmationModal.vue';\nexport default {\n  components: {\n    ConfirmationModal\n  },\n  data() {\n    return {\n      subscriberCategories: [],\n      addingNew: false,\n      editMode: null,\n      showConfirmationModal: false,\n      categoryToDelete: null,\n      newSubscriberCategory: {\n        name: ''\n      },\n      editSubscriberCategory: {\n        name: ''\n      }\n    };\n  },\n  created() {\n    this.loadSubscriberCategories();\n  },\n  methods: {\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    startAddingNew() {\n      this.addingNew = true;\n      this.resetNewSubscriberCategory();\n    },\n    cancelNewSubscriberCategory() {\n      this.addingNew = false;\n    },\n    resetNewSubscriberCategory() {\n      this.newSubscriberCategory = {\n        name: ''\n      };\n    },\n    saveNewSubscriberCategory() {\n      subscriberCategoryService.createSubscriberCategory(this.newSubscriberCategory).then(() => {\n        this.loadSubscriberCategories();\n        this.addingNew = false;\n      }).catch(error => {\n        console.error(\"There was an error saving the subscriber category!\", error);\n      });\n    },\n    editSubscriberCategoryFunc(category) {\n      this.editMode = category._id;\n      this.editSubscriberCategory = {\n        ...category\n      };\n    },\n    cancelEdit() {\n      this.editMode = null;\n    },\n    updateSubscriberCategory(id) {\n      subscriberCategoryService.updateSubscriberCategory(id, this.editSubscriberCategory).then(() => {\n        this.loadSubscriberCategories();\n        this.editMode = null;\n      }).catch(error => {\n        console.error(\"There was an error updating the subscriber category!\", error);\n      });\n    },\n    showDeleteModal(id) {\n      this.categoryToDelete = id;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n      this.categoryToDelete = null;\n    },\n    deleteSubscriberCategory() {\n      subscriberCategoryService.deleteSubscriberCategory(this.categoryToDelete).then(() => {\n        this.loadSubscriberCategories();\n        this.hideDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber category!\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["subscriberCategoryService","ConfirmationModal","components","data","subscriberCategories","addingNew","editMode","showConfirmationModal","categoryToDelete","newSubscriberCategory","name","editSubscriberCategory","created","loadSubscriberCategories","methods","getSubscriberCategories","then","response","catch","error","console","startAddingNew","resetNewSubscriberCategory","cancelNewSubscriberCategory","saveNewSubscriberCategory","createSubscriberCategory","editSubscriberCategoryFunc","category","_id","cancelEdit","updateSubscriberCategory","id","showDeleteModal","hideDeleteModal","deleteSubscriberCategory"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriberCategories.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscriber Categories</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscriber Categories</li>\n      </ol>\n    </nav>\n\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-if=\"addingNew\">\n          <td><input type=\"text\" v-model=\"newSubscriberCategory.name\" class=\"form-control\" /></td>\n          <td>\n            <button class=\"btn btn-primary btn-sm\" @click=\"saveNewSubscriberCategory\">Save</button>\n            <button class=\"btn btn-secondary btn-sm\" @click=\"cancelNewSubscriberCategory\">Cancel</button>\n          </td>\n        </tr>\n        <tr v-for=\"category in subscriberCategories\" :key=\"category._id\">\n          <template v-if=\"editMode === category._id\">\n            <td><input type=\"text\" v-model=\"editSubscriberCategory.name\" class=\"form-control\" /></td>\n            <td>\n              <button class=\"btn btn-primary btn-sm\" @click=\"updateSubscriberCategory(category._id)\">Save</button>\n              <button class=\"btn btn-secondary btn-sm\" @click=\"cancelEdit\">Cancel</button>\n            </td>\n          </template>\n          <template v-else>\n            <td>{{ category.name }}</td>\n            <td>\n              <button class=\"btn btn-warning btn-sm\" @click=\"editSubscriberCategoryFunc(category)\">Edit</button>\n              <button class=\"btn btn-danger btn-sm\" @click=\"showDeleteModal(category._id)\">Delete</button>\n            </td>\n          </template>\n        </tr>\n      </tbody>\n    </table>\n    <button class=\"btn btn-success mt-3\" @click=\"startAddingNew\">Add New Category</button>\n\n    <confirmation-modal\n      v-if=\"showConfirmationModal\"\n      :show=\"showConfirmationModal\"\n      title=\"Confirm Delete\"\n      message=\"Are you sure you want to delete this subscriber category?\"\n      @close=\"hideDeleteModal\"\n      @confirm=\"deleteSubscriberCategory\"\n    />\n  </div>\n</template>\n\n<script>\nimport subscriberCategoryService from '../services/subscriberCategoryService';\nimport ConfirmationModal from './ConfirmationModal.vue';\n\nexport default {\n  components: {\n    ConfirmationModal\n  },\n  data() {\n    return {\n      subscriberCategories: [],\n      addingNew: false,\n      editMode: null,\n      showConfirmationModal: false,\n      categoryToDelete: null,\n      newSubscriberCategory: {\n        name: ''\n      },\n      editSubscriberCategory: {\n        name: ''\n      }\n    };\n  },\n  created() {\n    this.loadSubscriberCategories();\n  },\n  methods: {\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    startAddingNew() {\n      this.addingNew = true;\n      this.resetNewSubscriberCategory();\n    },\n    cancelNewSubscriberCategory() {\n      this.addingNew = false;\n    },\n    resetNewSubscriberCategory() {\n      this.newSubscriberCategory = {\n        name: ''\n      };\n    },\n    saveNewSubscriberCategory() {\n      subscriberCategoryService.createSubscriberCategory(this.newSubscriberCategory).then(() => {\n        this.loadSubscriberCategories();\n        this.addingNew = false;\n      }).catch(error => {\n        console.error(\"There was an error saving the subscriber category!\", error);\n      });\n    },\n    editSubscriberCategoryFunc(category) {\n      this.editMode = category._id;\n      this.editSubscriberCategory = { ...category };\n    },\n    cancelEdit() {\n      this.editMode = null;\n    },\n    updateSubscriberCategory(id) {\n      subscriberCategoryService.updateSubscriberCategory(id, this.editSubscriberCategory).then(() => {\n        this.loadSubscriberCategories();\n        this.editMode = null;\n      }).catch(error => {\n        console.error(\"There was an error updating the subscriber category!\", error);\n      });\n    },\n    showDeleteModal(id) {\n      this.categoryToDelete = id;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n      this.categoryToDelete = null;\n    },\n    deleteSubscriberCategory() {\n      subscriberCategoryService.deleteSubscriberCategory(this.categoryToDelete).then(() => {\n        this.loadSubscriberCategories();\n        this.hideDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber category!\", error);\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}