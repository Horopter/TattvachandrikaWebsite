{"ast":null,"code":"import magazineSubscriberService from '../services/magazineSubscriberService';\nimport subscriptionService from '../services/subscriptionService';\nimport subscriptionPlanService from '../services/subscriptionPlanService';\nimport subscriberCategoryService from '../services/subscriberCategoryService';\nimport subscriberTypeService from '../services/subscriberTypeService';\nexport default {\n  data() {\n    return {\n      subscriber: {},\n      subscriptions: [],\n      subscriptionPlans: [],\n      subscriberCategories: [],\n      subscriberTypes: []\n    };\n  },\n  created() {\n    this.loadSubscriber();\n    this.loadSubscriptions();\n    this.loadSubscriptionPlans();\n    this.loadSubscriberCategories();\n    this.loadSubscriberTypes();\n  },\n  methods: {\n    loadSubscriber() {\n      magazineSubscriberService.getMagazineSubscriberById(this.$route.params.subscriberId).then(response => {\n        this.subscriber = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber details!\", error);\n      });\n    },\n    loadSubscriptions() {\n      subscriptionService.getSubscriptionsBySubscriberId(this.$route.params.subscriberId).then(response => {\n        this.subscriptions = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriptions!\", error);\n      });\n    },\n    loadSubscriptionPlans() {\n      subscriptionPlanService.getSubscriptionPlans().then(response => {\n        this.subscriptionPlans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription plans!\", error);\n      });\n    },\n    loadSubscriberCategories() {\n      subscriberCategoryService.getSubscriberCategories().then(response => {\n        this.subscriberCategories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\n      });\n    },\n    loadSubscriberTypes() {\n      subscriberTypeService.getSubscriberTypes().then(response => {\n        this.subscriberTypes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber types!\", error);\n      });\n    },\n    getSubscriptionPlanName(planId) {\n      const plan = this.subscriptionPlans.find(p => p._id === planId);\n      return plan ? plan.name : 'Unknown';\n    },\n    getCategoryName(categoryId) {\n      const category = this.subscriberCategories.find(cat => cat._id === categoryId);\n      return category ? category.name : 'Unknown';\n    },\n    getTypeName(typeId) {\n      const type = this.subscriberTypes.find(typ => typ._id === typeId);\n      return type ? type.name : 'Unknown';\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","subscriptionService","subscriptionPlanService","subscriberCategoryService","subscriberTypeService","data","subscriber","subscriptions","subscriptionPlans","subscriberCategories","subscriberTypes","created","loadSubscriber","loadSubscriptions","loadSubscriptionPlans","loadSubscriberCategories","loadSubscriberTypes","methods","getMagazineSubscriberById","$route","params","subscriberId","then","response","catch","error","console","getSubscriptionsBySubscriberId","getSubscriptionPlans","getSubscriberCategories","getSubscriberTypes","getSubscriptionPlanName","planId","plan","find","p","_id","name","getCategoryName","categoryId","category","cat","getTypeName","typeId","type","typ"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriberDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h2>Subscriber Details: {{ subscriber.name }}</h2>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/subscribers\">Magazine Subscribers</router-link></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscriber Details</li>\r\n      </ol>\r\n    </nav>\r\n\r\n    <div class=\"card mb-3\">\r\n      <div class=\"card-header\">\r\n        Subscriber Information\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p><strong>Name:</strong> {{ subscriber.name }}</p>\r\n        <p><strong>Registration Number:</strong> {{ subscriber.registration_number }}</p>\r\n        <p><strong>Address:</strong> {{ subscriber.address }}</p>\r\n        <p><strong>City/Town:</strong> {{ subscriber.city_town }}</p>\r\n        <p><strong>State:</strong> {{ subscriber.state }}</p>\r\n        <p><strong>Pincode:</strong> {{ subscriber.pincode }}</p>\r\n        <p><strong>Phone:</strong> {{ subscriber.phone }}</p>\r\n        <p><strong>Email:</strong> {{ subscriber.email }}</p>\r\n        <p><strong>Category:</strong> {{ getCategoryName(subscriber.category) }}</p>\r\n        <p><strong>Type:</strong> {{ getTypeName(subscriber.stype) }}</p>\r\n        <p><strong>Notes:</strong> {{ subscriber.notes }}</p>\r\n        <p><strong>Active:</strong> {{ subscriber.active ? 'Yes' : 'No' }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Subscriptions</h3>\r\n    <table class=\"table table-striped mt-3\">\r\n      <thead>\r\n        <tr>\r\n          <th>Subscription Plan</th>\r\n          <th>Start Date</th>\r\n          <th>End Date</th>\r\n          <th>Active</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"subscription in subscriptions\" :key=\"subscription._id\">\r\n          <td>{{ getSubscriptionPlanName(subscription.subscription_plan) }}</td>\r\n          <td>{{ subscription.start_date }}</td>\r\n          <td>{{ subscription.end_date }}</td>\r\n          <td>{{ subscription.active ? 'Yes' : 'No' }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '../services/magazineSubscriberService';\r\nimport subscriptionService from '../services/subscriptionService';\r\nimport subscriptionPlanService from '../services/subscriptionPlanService';\r\nimport subscriberCategoryService from '../services/subscriberCategoryService';\r\nimport subscriberTypeService from '../services/subscriberTypeService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      subscriber: {},\r\n      subscriptions: [],\r\n      subscriptionPlans: [],\r\n      subscriberCategories: [],\r\n      subscriberTypes: []\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSubscriber();\r\n    this.loadSubscriptions();\r\n    this.loadSubscriptionPlans();\r\n    this.loadSubscriberCategories();\r\n    this.loadSubscriberTypes();\r\n  },\r\n  methods: {\r\n    loadSubscriber() {\r\n      magazineSubscriberService.getMagazineSubscriberById(this.$route.params.subscriberId).then(response => {\r\n        this.subscriber = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriber details!\", error);\r\n      });\r\n    },\r\n    loadSubscriptions() {\r\n      subscriptionService.getSubscriptionsBySubscriberId(this.$route.params.subscriberId).then(response => {\r\n        this.subscriptions = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriptions!\", error);\r\n      });\r\n    },\r\n    loadSubscriptionPlans() {\r\n      subscriptionPlanService.getSubscriptionPlans().then(response => {\r\n        this.subscriptionPlans = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscription plans!\", error);\r\n      });\r\n    },\r\n    loadSubscriberCategories() {\r\n      subscriberCategoryService.getSubscriberCategories().then(response => {\r\n        this.subscriberCategories = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriber categories!\", error);\r\n      });\r\n    },\r\n    loadSubscriberTypes() {\r\n      subscriberTypeService.getSubscriberTypes().then(response => {\r\n        this.subscriberTypes = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriber types!\", error);\r\n      });\r\n    },\r\n    getSubscriptionPlanName(planId) {\r\n      const plan = this.subscriptionPlans.find(p => p._id === planId);\r\n      return plan ? plan.name : 'Unknown';\r\n    },\r\n    getCategoryName(categoryId) {\r\n      const category = this.subscriberCategories.find(cat => cat._id === categoryId);\r\n      return category ? category.name : 'Unknown';\r\n    },\r\n    getTypeName(typeId) {\r\n      const type = this.subscriberTypes.find(typ => typ._id === typeId);\r\n      return type ? type.name : 'Unknown';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}