{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport magazineSubscriberService from '@/services/magazineSubscriberService';\nimport AddEditSubscriberModal from './AddEditSubscriberModal.vue';\nimport ConfirmationModal from './ConfirmationModal.vue';\nexport default {\n  components: {\n    AddEditSubscriberModal,\n    ConfirmationModal\n  },\n  data() {\n    return {\n      subscribers: [],\n      filteredSubscribers: [],\n      searchText: '',\n      selectedSubscriber: null,\n      isEdit: false,\n      showConfirmation: false,\n      subscriberToDelete: null\n    };\n  },\n  methods: {\n    fetchSubscribers() {\n      magazineSubscriberService.getSubscribers().then(response => {\n        this.subscribers = response.data;\n        this.filteredSubscribers = this.subscribers;\n      });\n    },\n    searchSubscribers() {\n      const lowercasedFilter = this.searchText.toLowerCase();\n      this.filteredSubscribers = this.subscribers.filter(subscriber => {\n        return subscriber.name.toLowerCase().includes(lowercasedFilter) || subscriber.email.toLowerCase().includes(lowercasedFilter);\n      });\n    },\n    openAddSubscriberModal() {\n      this.selectedSubscriber = null;\n      this.isEdit = false;\n      this.$refs.addEditSubscriberModal.open();\n    },\n    viewSubscriber(id) {\n      this.$router.push({\n        name: 'MagazineSubscriberDetails',\n        params: {\n          id\n        }\n      });\n    },\n    editSubscriber(subscriber) {\n      this.selectedSubscriber = subscriber;\n      this.isEdit = true;\n      this.$refs.addEditSubscriberModal.open();\n    },\n    confirmDelete(id) {\n      this.subscriberToDelete = id;\n      this.showConfirmation = true;\n    },\n    deleteSubscriber() {\n      magazineSubscriberService.deleteSubscriber(this.subscriberToDelete).then(() => {\n        this.fetchSubscribers();\n        this.showConfirmation = false;\n      });\n    },\n    closeModal() {\n      this.selectedSubscriber = null;\n      this.isEdit = false;\n      this.fetchSubscribers();\n    },\n    closeConfirmation() {\n      this.showConfirmation = false;\n    },\n    addSubscription(id) {\n      this.$router.push({\n        name: 'AddSubscription',\n        params: {\n          id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchSubscribers();\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","AddEditSubscriberModal","ConfirmationModal","components","data","subscribers","filteredSubscribers","searchText","selectedSubscriber","isEdit","showConfirmation","subscriberToDelete","methods","fetchSubscribers","getSubscribers","then","response","searchSubscribers","lowercasedFilter","toLowerCase","filter","subscriber","name","includes","email","openAddSubscriberModal","$refs","addEditSubscriberModal","open","viewSubscriber","id","$router","push","params","editSubscriber","confirmDelete","deleteSubscriber","closeModal","closeConfirmation","addSubscription","mounted"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscribers.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h1 class=\"mb-4\">Magazine Subscribers</h1>\r\n    <div class=\"d-flex justify-content-between mb-3\">\r\n      <input type=\"text\" v-model=\"searchText\" class=\"form-control w-50\" placeholder=\"Search by name or email\" @input=\"searchSubscribers\" />\r\n      <button class=\"btn btn-primary\" @click=\"openAddSubscriberModal\">Add Subscriber</button>\r\n    </div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Registration Number</th>\r\n          <th>City/Town</th>\r\n          <th>State</th>\r\n          <th>Pincode</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Category</th>\r\n          <th>Type</th>\r\n          <th>Has Active Subscriptions</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"subscriber in filteredSubscribers\" :key=\"subscriber._id\">\r\n          <td>{{ subscriber.name }}</td>\r\n          <td>{{ subscriber.registration_number }}</td>\r\n          <td>{{ subscriber.city_town }}</td>\r\n          <td>{{ subscriber.state }}</td>\r\n          <td>{{ subscriber.pincode }}</td>\r\n          <td>{{ subscriber.phone }}</td>\r\n          <td>{{ subscriber.email }}</td>\r\n          <td>{{ subscriber.category.name }}</td>\r\n          <td>{{ subscriber.stype.name }}</td>\r\n          <td>{{ subscriber.hasActiveSubscriptions ? 'Yes' : 'No' }}</td>\r\n          <td>\r\n            <button class=\"btn btn-info btn-sm\" @click=\"viewSubscriber(subscriber._id)\">View</button>\r\n            <button class=\"btn btn-warning btn-sm\" @click=\"editSubscriber(subscriber)\">Edit</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"confirmDelete(subscriber._id)\">Delete</button>\r\n            <button class=\"btn btn-secondary btn-sm\" @click=\"addSubscription(subscriber._id)\">Add Subscription</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <add-edit-subscriber-modal\r\n      ref=\"addEditSubscriberModal\"\r\n      :subscriber=\"selectedSubscriber\"\r\n      :is-edit=\"isEdit\"\r\n      @save=\"fetchSubscribers\"\r\n      @close=\"closeModal\"\r\n    />\r\n    <confirmation-modal\r\n      v-if=\"showConfirmation\"\r\n      @confirm=\"deleteSubscriber\"\r\n      @cancel=\"closeConfirmation\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '@/services/magazineSubscriberService';\r\nimport AddEditSubscriberModal from './AddEditSubscriberModal.vue';\r\nimport ConfirmationModal from './ConfirmationModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AddEditSubscriberModal,\r\n    ConfirmationModal,\r\n  },\r\n  data() {\r\n    return {\r\n      subscribers: [],\r\n      filteredSubscribers: [],\r\n      searchText: '',\r\n      selectedSubscriber: null,\r\n      isEdit: false,\r\n      showConfirmation: false,\r\n      subscriberToDelete: null,\r\n    };\r\n  },\r\n  methods: {\r\n    fetchSubscribers() {\r\n      magazineSubscriberService.getSubscribers().then((response) => {\r\n        this.subscribers = response.data;\r\n        this.filteredSubscribers = this.subscribers;\r\n      });\r\n    },\r\n    searchSubscribers() {\r\n      const lowercasedFilter = this.searchText.toLowerCase();\r\n      this.filteredSubscribers = this.subscribers.filter((subscriber) => {\r\n        return (\r\n          subscriber.name.toLowerCase().includes(lowercasedFilter) ||\r\n          subscriber.email.toLowerCase().includes(lowercasedFilter)\r\n        );\r\n      });\r\n    },\r\n    openAddSubscriberModal() {\r\n      this.selectedSubscriber = null;\r\n      this.isEdit = false;\r\n      this.$refs.addEditSubscriberModal.open();\r\n    },\r\n    viewSubscriber(id) {\r\n      this.$router.push({ name: 'MagazineSubscriberDetails', params: { id } });\r\n    },\r\n    editSubscriber(subscriber) {\r\n      this.selectedSubscriber = subscriber;\r\n      this.isEdit = true;\r\n      this.$refs.addEditSubscriberModal.open();\r\n    },\r\n    confirmDelete(id) {\r\n      this.subscriberToDelete = id;\r\n      this.showConfirmation = true;\r\n    },\r\n    deleteSubscriber() {\r\n      magazineSubscriberService.deleteSubscriber(this.subscriberToDelete).then(() => {\r\n        this.fetchSubscribers();\r\n        this.showConfirmation = false;\r\n      });\r\n    },\r\n    closeModal() {\r\n      this.selectedSubscriber = null;\r\n      this.isEdit = false;\r\n      this.fetchSubscribers();\r\n    },\r\n    closeConfirmation() {\r\n      this.showConfirmation = false;\r\n    },\r\n    addSubscription(id) {\r\n      this.$router.push({ name: 'AddSubscription', params: { id } });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchSubscribers();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":";AA4DA,OAAOA,yBAAwB,MAAO,sCAAsC;AAC5E,OAAOC,sBAAqB,MAAO,8BAA8B;AACjE,OAAOC,iBAAgB,MAAO,yBAAyB;AAEvD,eAAe;EACbC,UAAU,EAAE;IACVF,sBAAsB;IACtBC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,mBAAmB,EAAE,EAAE;MACvBC,UAAU,EAAE,EAAE;MACdC,kBAAkB,EAAE,IAAI;MACxBC,MAAM,EAAE,KAAK;MACbC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAAA,EAAG;MACjBb,yBAAyB,CAACc,cAAc,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAC5D,IAAI,CAACX,WAAU,GAAIW,QAAQ,CAACZ,IAAI;QAChC,IAAI,CAACE,mBAAkB,GAAI,IAAI,CAACD,WAAW;MAC7C,CAAC,CAAC;IACJ,CAAC;IACDY,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,gBAAe,GAAI,IAAI,CAACX,UAAU,CAACY,WAAW,CAAC,CAAC;MACtD,IAAI,CAACb,mBAAkB,GAAI,IAAI,CAACD,WAAW,CAACe,MAAM,CAAEC,UAAU,IAAK;QACjE,OACEA,UAAU,CAACC,IAAI,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,gBAAgB,KACvDG,UAAU,CAACG,KAAK,CAACL,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,gBAAgB;MAE5D,CAAC,CAAC;IACJ,CAAC;IACDO,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACjB,kBAAiB,GAAI,IAAI;MAC9B,IAAI,CAACC,MAAK,GAAI,KAAK;MACnB,IAAI,CAACiB,KAAK,CAACC,sBAAsB,CAACC,IAAI,CAAC,CAAC;IAC1C,CAAC;IACDC,cAAcA,CAACC,EAAE,EAAE;MACjB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEV,IAAI,EAAE,2BAA2B;QAAEW,MAAM,EAAE;UAAEH;QAAG;MAAE,CAAC,CAAC;IAC1E,CAAC;IACDI,cAAcA,CAACb,UAAU,EAAE;MACzB,IAAI,CAACb,kBAAiB,GAAIa,UAAU;MACpC,IAAI,CAACZ,MAAK,GAAI,IAAI;MAClB,IAAI,CAACiB,KAAK,CAACC,sBAAsB,CAACC,IAAI,CAAC,CAAC;IAC1C,CAAC;IACDO,aAAaA,CAACL,EAAE,EAAE;MAChB,IAAI,CAACnB,kBAAiB,GAAImB,EAAE;MAC5B,IAAI,CAACpB,gBAAe,GAAI,IAAI;IAC9B,CAAC;IACD0B,gBAAgBA,CAAA,EAAG;MACjBpC,yBAAyB,CAACoC,gBAAgB,CAAC,IAAI,CAACzB,kBAAkB,CAAC,CAACI,IAAI,CAAC,MAAM;QAC7E,IAAI,CAACF,gBAAgB,CAAC,CAAC;QACvB,IAAI,CAACH,gBAAe,GAAI,KAAK;MAC/B,CAAC,CAAC;IACJ,CAAC;IACD2B,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC7B,kBAAiB,GAAI,IAAI;MAC9B,IAAI,CAACC,MAAK,GAAI,KAAK;MACnB,IAAI,CAACI,gBAAgB,CAAC,CAAC;IACzB,CAAC;IACDyB,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC5B,gBAAe,GAAI,KAAK;IAC/B,CAAC;IACD6B,eAAeA,CAACT,EAAE,EAAE;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEV,IAAI,EAAE,iBAAiB;QAAEW,MAAM,EAAE;UAAEH;QAAG;MAAE,CAAC,CAAC;IAChE;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC3B,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}