{"ast":null,"code":"import subscriberTypeService from '../services/subscriberTypeService';\nexport default {\n  data() {\n    return {\n      subscriberTypes: [],\n      subscriberTypeForm: {\n        name: ''\n      },\n      editSubscriberType: null\n    };\n  },\n  created() {\n    this.loadSubscriberTypes();\n  },\n  methods: {\n    loadSubscriberTypes() {\n      subscriberTypeService.getSubscriberTypes().then(response => {\n        this.subscriberTypes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber types!\", error);\n      });\n    },\n    addSubscriberType() {\n      if (this.subscriberTypeForm.name.trim()) {\n        subscriberTypeService.createSubscriberType(this.subscriberTypeForm).then(() => {\n          this.loadSubscriberTypes();\n          this.subscriberTypeForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error adding the subscriber type!\", error);\n        });\n      }\n    },\n    editType(subscriberType) {\n      this.editSubscriberType = {\n        ...subscriberType\n      };\n      this.subscriberTypeForm.name = subscriberType.name;\n    },\n    updateSubscriberType() {\n      if (this.subscriberTypeForm.name.trim()) {\n        subscriberTypeService.updateSubscriberType(this.editSubscriberType._id, this.subscriberTypeForm).then(() => {\n          this.loadSubscriberTypes();\n          this.editSubscriberType = null;\n          this.subscriberTypeForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber type!\", error);\n        });\n      }\n    },\n    deleteSubscriberType(id) {\n      subscriberTypeService.deleteSubscriberType(id).then(() => {\n        this.loadSubscriberTypes();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscriber type!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriberType = null;\n      this.subscriberTypeForm.name = '';\n    }\n  }\n};","map":{"version":3,"names":["subscriberTypeService","data","subscriberTypes","subscriberTypeForm","name","editSubscriberType","created","loadSubscriberTypes","methods","getSubscriberTypes","then","response","catch","error","console","addSubscriberType","trim","createSubscriberType","editType","subscriberType","updateSubscriberType","_id","deleteSubscriberType","id","cancelEdit"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriberTypes.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h2>Subscriber Types</h2>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscriber Types</li>\r\n      </ol>\r\n    </nav>\r\n\r\n    <!-- Add Subscriber Type Form -->\r\n    <form @submit.prevent=\"addSubscriberType\">\r\n      <div class=\"mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"subscriberTypeForm.name\"\r\n          placeholder=\"New Subscriber Type Name\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add</button>\r\n    </form>\r\n\r\n    <!-- Edit Subscriber Type Form (conditional) -->\r\n    <div v-if=\"editSubscriberType\">\r\n      <h3>Edit Subscriber Type</h3>\r\n      <form @submit.prevent=\"updateSubscriberType\">\r\n        <div class=\"mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"subscriberTypeForm.name\"\r\n            placeholder=\"Edit Subscriber Type Name\"\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-success mt-2\">Save</button>\r\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" @click=\"cancelEdit\">Cancel</button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Subscriber Types Table -->\r\n    <table class=\"table table-striped mt-4\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"subscriberType in subscriberTypes\" :key=\"subscriberType._id\">\r\n          <td>{{ subscriberType.name }}</td>\r\n          <td>\r\n            <button class=\"btn btn-warning btn-sm\" @click=\"editType(subscriberType)\">Edit</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteSubscriberType(subscriberType._id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport subscriberTypeService from '../services/subscriberTypeService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      subscriberTypes: [],\r\n      subscriberTypeForm: {\r\n        name: ''\r\n      },\r\n      editSubscriberType: null\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSubscriberTypes();\r\n  },\r\n  methods: {\r\n    loadSubscriberTypes() {\r\n      subscriberTypeService.getSubscriberTypes().then(response => {\r\n        this.subscriberTypes = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriber types!\", error);\r\n      });\r\n    },\r\n    addSubscriberType() {\r\n      if (this.subscriberTypeForm.name.trim()) {\r\n        subscriberTypeService.createSubscriberType(this.subscriberTypeForm).then(() => {\r\n          this.loadSubscriberTypes();\r\n          this.subscriberTypeForm.name = '';\r\n        }).catch(error => {\r\n          console.error(\"There was an error adding the subscriber type!\", error);\r\n        });\r\n      }\r\n    },\r\n    editType(subscriberType) {\r\n      this.editSubscriberType = { ...subscriberType };\r\n      this.subscriberTypeForm.name = subscriberType.name;\r\n    },\r\n    updateSubscriberType() {\r\n      if (this.subscriberTypeForm.name.trim()) {\r\n        subscriberTypeService.updateSubscriberType(this.editSubscriberType._id, this.subscriberTypeForm).then(() => {\r\n          this.loadSubscriberTypes();\r\n          this.editSubscriberType = null;\r\n          this.subscriberTypeForm.name = '';\r\n        }).catch(error => {\r\n          console.error(\"There was an error updating the subscriber type!\", error);\r\n        });\r\n      }\r\n    },\r\n    deleteSubscriberType(id) {\r\n      subscriberTypeService.deleteSubscriberType(id).then(() => {\r\n        this.loadSubscriberTypes();\r\n      }).catch(error => {\r\n        console.error(\"There was an error deleting the subscriber type!\", error);\r\n      });\r\n    },\r\n    cancelEdit() {\r\n      this.editSubscriberType = null;\r\n      this.subscriberTypeForm.name = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"AA8DA,OAAOA,qBAAoB,MAAO,mCAAmC;AAErE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE;QAClBC,IAAI,EAAE;MACR,CAAC;MACDC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACPD,mBAAmBA,CAAA,EAAG;MACpBP,qBAAqB,CAACS,kBAAkB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QAC1D,IAAI,CAACT,eAAc,GAAIS,QAAQ,CAACV,IAAI;MACtC,CAAC,CAAC,CAACW,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC7E,CAAC,CAAC;IACJ,CAAC;IACDE,iBAAiBA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACZ,kBAAkB,CAACC,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;QACvChB,qBAAqB,CAACiB,oBAAoB,CAAC,IAAI,CAACd,kBAAkB,CAAC,CAACO,IAAI,CAAC,MAAM;UAC7E,IAAI,CAACH,mBAAmB,CAAC,CAAC;UAC1B,IAAI,CAACJ,kBAAkB,CAACC,IAAG,GAAI,EAAE;QACnC,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;QACxE,CAAC,CAAC;MACJ;IACF,CAAC;IACDK,QAAQA,CAACC,cAAc,EAAE;MACvB,IAAI,CAACd,kBAAiB,GAAI;QAAE,GAAGc;MAAe,CAAC;MAC/C,IAAI,CAAChB,kBAAkB,CAACC,IAAG,GAAIe,cAAc,CAACf,IAAI;IACpD,CAAC;IACDgB,oBAAoBA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACjB,kBAAkB,CAACC,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;QACvChB,qBAAqB,CAACoB,oBAAoB,CAAC,IAAI,CAACf,kBAAkB,CAACgB,GAAG,EAAE,IAAI,CAAClB,kBAAkB,CAAC,CAACO,IAAI,CAAC,MAAM;UAC1G,IAAI,CAACH,mBAAmB,CAAC,CAAC;UAC1B,IAAI,CAACF,kBAAiB,GAAI,IAAI;UAC9B,IAAI,CAACF,kBAAkB,CAACC,IAAG,GAAI,EAAE;QACnC,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;QAC1E,CAAC,CAAC;MACJ;IACF,CAAC;IACDS,oBAAoBA,CAACC,EAAE,EAAE;MACvBvB,qBAAqB,CAACsB,oBAAoB,CAACC,EAAE,CAAC,CAACb,IAAI,CAAC,MAAM;QACxD,IAAI,CAACH,mBAAmB,CAAC,CAAC;MAC5B,CAAC,CAAC,CAACK,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAC1E,CAAC,CAAC;IACJ,CAAC;IACDW,UAAUA,CAAA,EAAG;MACX,IAAI,CAACnB,kBAAiB,GAAI,IAAI;MAC9B,IAAI,CAACF,kBAAkB,CAACC,IAAG,GAAI,EAAE;IACnC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}