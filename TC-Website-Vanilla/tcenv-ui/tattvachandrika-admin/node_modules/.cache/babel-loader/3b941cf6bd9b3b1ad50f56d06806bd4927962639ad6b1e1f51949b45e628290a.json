{"ast":null,"code":"import magazineSubscriberService from '@/services/magazineSubscriberService';\nexport default {\n  props: {\n    subscriber: Object,\n    isEdit: Boolean\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: ''\n      },\n      categories: [],\n      types: []\n    };\n  },\n  methods: {\n    open() {\n      $('#subscriberModal').modal('show');\n      if (this.isEdit && this.subscriber) {\n        this.form = {\n          ...this.subscriber\n        };\n        this.form.category = this.subscriber.category._id;\n        this.form.stype = this.subscriber.stype._id;\n      }\n      this.fetchCategories();\n      this.fetchTypes();\n    },\n    close() {\n      $('#subscriberModal').modal('hide');\n      this.$emit('close');\n    },\n    submitForm() {\n      if (this.isEdit) {\n        magazineSubscriberService.updateSubscriber(this.subscriber._id, this.form).then(() => {\n          this.close();\n          this.$emit('save');\n        });\n      } else {\n        magazineSubscriberService.createSubscriber(this.form).then(() => {\n          this.close();\n          this.$emit('save');\n        });\n      }\n    },\n    fetchCategories() {\n      magazineSubscriberService.getCategories().then(response => {\n        this.categories = response.data;\n      });\n    },\n    fetchTypes() {\n      magazineSubscriberService.getTypes().then(response => {\n        this.types = response.data;\n      });\n    }\n  },\n  watch: {\n    subscriber(newVal) {\n      if (this.isEdit && newVal) {\n        this.form = {\n          ...newVal\n        };\n        this.form.category = newVal.category._id;\n        this.form.stype = newVal.stype._id;\n      }\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","props","subscriber","Object","isEdit","Boolean","data","form","name","registration_number","address","city_town","state","pincode","phone","email","category","stype","notes","categories","types","methods","open","$","modal","_id","fetchCategories","fetchTypes","close","$emit","submitForm","updateSubscriber","then","createSubscriber","getCategories","response","getTypes","watch","newVal"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\AddEditSubscriberModal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"modal fade\" id=\"subscriberModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"subscriberModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"subscriberModalLabel\">{{ isEdit ? 'Edit Subscriber' : 'Add Subscriber' }}</h5>\r\n            <button type=\"button\" class=\"close\" @click=\"close\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"submitForm\">\r\n              <div class=\"form-group\">\r\n                <label>Name</label>\r\n                <input type=\"text\" v-model=\"form.name\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Registration Number</label>\r\n                <input type=\"text\" v-model=\"form.registration_number\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Address</label>\r\n                <textarea v-model=\"form.address\" class=\"form-control\" required></textarea>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>City/Town</label>\r\n                <input type=\"text\" v-model=\"form.city_town\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>State</label>\r\n                <input type=\"text\" v-model=\"form.state\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Pincode</label>\r\n                <input type=\"text\" v-model=\"form.pincode\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Phone</label>\r\n                <input type=\"text\" v-model=\"form.phone\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"email\" v-model=\"form.email\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Category</label>\r\n                <select v-model=\"form.category\" class=\"form-control\" required>\r\n                  <option v-for=\"category in categories\" :key=\"category._id\" :value=\"category._id\">{{ category.name }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Type</label>\r\n                <select v-model=\"form.stype\" class=\"form-control\" required>\r\n                  <option v-for=\"type in types\" :key=\"type._id\" :value=\"type._id\">{{ type.name }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Notes</label>\r\n                <textarea v-model=\"form.notes\" class=\"form-control\"></textarea>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">{{ isEdit ? 'Update' : 'Add' }}</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '@/services/magazineSubscriberService';\r\n\r\nexport default {\r\n  props: {\r\n    subscriber: Object,\r\n    isEdit: Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        name: '',\r\n        registration_number: '',\r\n        address: '',\r\n        city_town: '',\r\n        state: '',\r\n        pincode: '',\r\n        phone: '',\r\n        email: '',\r\n        category: '',\r\n        stype: '',\r\n        notes: '',\r\n      },\r\n      categories: [],\r\n      types: [],\r\n    };\r\n  },\r\n  methods: {\r\n    open() {\r\n      $('#subscriberModal').modal('show');\r\n      if (this.isEdit && this.subscriber) {\r\n        this.form = { ...this.subscriber };\r\n        this.form.category = this.subscriber.category._id;\r\n        this.form.stype = this.subscriber.stype._id;\r\n      }\r\n      this.fetchCategories();\r\n      this.fetchTypes();\r\n    },\r\n    close() {\r\n      $('#subscriberModal').modal('hide');\r\n      this.$emit('close');\r\n    },\r\n    submitForm() {\r\n      if (this.isEdit) {\r\n        magazineSubscriberService.updateSubscriber(this.subscriber._id, this.form).then(() => {\r\n          this.close();\r\n          this.$emit('save');\r\n        });\r\n      } else {\r\n        magazineSubscriberService.createSubscriber(this.form).then(() => {\r\n          this.close();\r\n          this.$emit('save');\r\n        });\r\n      }\r\n    },\r\n    fetchCategories() {\r\n      magazineSubscriberService.getCategories().then((response) => {\r\n        this.categories = response.data;\r\n      });\r\n    },\r\n    fetchTypes() {\r\n      magazineSubscriberService.getTypes().then((response) => {\r\n        this.types = response.data;\r\n      });\r\n    },\r\n  },\r\n  watch: {\r\n    subscriber(newVal) {\r\n      if (this.isEdit && newVal) {\r\n        this.form = { ...newVal };\r\n        this.form.category = newVal.category._id;\r\n        this.form.stype = newVal.stype._id;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}