{"ast":null,"code":"import subscriptionModeService from '../services/subscriptionModeService';\nexport default {\n  data() {\n    return {\n      subscriptionModes: [],\n      subscriptionModeForm: {\n        name: ''\n      },\n      editSubscriptionMode: null,\n      searchText: '',\n      pagination: null\n    };\n  },\n  created() {\n    this.loadSubscriptionModes();\n  },\n  methods: {\n    loadSubscriptionModes(pageUrl) {\n      subscriptionModeService.getSubscriptionModes(pageUrl).then(response => {\n        this.subscriptionModes = response.data.results;\n        this.pagination = {\n          next: response.data.next,\n          prev: response.data.previous\n        };\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription modes!\", error);\n      });\n    },\n    addSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.createSubscriptionMode(this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.subscriptionModeForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription mode!\", error);\n        });\n      }\n    },\n    editMode(subscriptionMode) {\n      this.editSubscriptionMode = {\n        ...subscriptionMode\n      };\n      this.subscriptionModeForm.name = subscriptionMode.name;\n    },\n    updateSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.updateSubscriptionMode(this.editSubscriptionMode._id, this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.editSubscriptionMode = null;\n          this.subscriptionModeForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription mode!\", error);\n        });\n      }\n    },\n    deleteSubscriptionMode(id) {\n      subscriptionModeService.deleteSubscriptionMode(id).then(() => {\n        this.loadSubscriptionModes();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription mode!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionMode = null;\n      this.subscriptionModeForm.name = '';\n    },\n    searchSubscriptionModes() {\n      this.loadSubscriptionModes();\n    },\n    loadPage(url) {\n      this.loadSubscriptionModes(url);\n    }\n  }\n};","map":{"version":3,"names":["subscriptionModeService","data","subscriptionModes","subscriptionModeForm","name","editSubscriptionMode","searchText","pagination","created","loadSubscriptionModes","methods","pageUrl","getSubscriptionModes","then","response","results","next","prev","previous","catch","error","console","addSubscriptionMode","trim","createSubscriptionMode","editMode","subscriptionMode","updateSubscriptionMode","_id","deleteSubscriptionMode","id","cancelEdit","searchSubscriptionModes","loadPage","url"],"sources":["C:\\Users\\santoshdesai\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriptionModes.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscription Modes</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscription Modes</li>\n      </ol>\n    </nav>\n\n    <!-- Search Form -->\n    <form @submit.prevent=\"searchSubscriptionModes\">\n      <div class=\"mb-3\">\n        <input\n          type=\"text\"\n          v-model=\"searchText\"\n          placeholder=\"Search by name\"\n          class=\"form-control\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Search</button>\n    </form>\n\n    <!-- Add Subscription Mode Form -->\n    <form @submit.prevent=\"addSubscriptionMode\">\n      <div class=\"mb-3\">\n        <input\n          type=\"text\"\n          v-model=\"subscriptionModeForm.name\"\n          placeholder=\"New Subscription Mode Name\"\n          class=\"form-control\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add</button>\n    </form>\n\n    <!-- Edit Subscription Mode Form (conditional) -->\n    <div v-if=\"editSubscriptionMode\">\n      <h3>Edit Subscription Mode</h3>\n      <form @submit.prevent=\"updateSubscriptionMode\">\n        <div class=\"mb-3\">\n          <input\n            type=\"text\"\n            v-model=\"subscriptionModeForm.name\"\n            placeholder=\"Edit Subscription Mode Name\"\n            class=\"form-control\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-success mt-2\">Save</button>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" @click=\"cancelEdit\">Cancel</button>\n      </form>\n    </div>\n\n    <!-- Subscription Modes Table -->\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"subscriptionMode in subscriptionModes\" :key=\"subscriptionMode._id\">\n          <td>{{ subscriptionMode.name }}</td>\n          <td>\n            <button class=\"btn btn-warning btn-sm\" @click=\"editMode(subscriptionMode)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteSubscriptionMode(subscriptionMode._id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Pagination Controls -->\n    <nav aria-label=\"Page navigation\" v-if=\"pagination\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" :class=\"{ disabled: !pagination.prev }\">\n          <a class=\"page-link\" @click=\"loadPage(pagination.prev)\" href=\"#\">Previous</a>\n        </li>\n        <li class=\"page-item\" :class=\"{ disabled: !pagination.next }\">\n          <a class=\"page-link\" @click=\"loadPage(pagination.next)\" href=\"#\">Next</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</template>\n\n<script>\nimport subscriptionModeService from '../services/subscriptionModeService';\n\nexport default {\n  data() {\n    return {\n      subscriptionModes: [],\n      subscriptionModeForm: {\n        name: ''\n      },\n      editSubscriptionMode: null,\n      searchText: '',\n      pagination: null\n    };\n  },\n  created() {\n    this.loadSubscriptionModes();\n  },\n  methods: {\n    loadSubscriptionModes(pageUrl) {\n      subscriptionModeService.getSubscriptionModes(pageUrl).then(response => {\n        this.subscriptionModes = response.data.results;\n        this.pagination = {\n          next: response.data.next,\n          prev: response.data.previous\n        };\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription modes!\", error);\n      });\n    },\n    addSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.createSubscriptionMode(this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.subscriptionModeForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription mode!\", error);\n        });\n      }\n    },\n    editMode(subscriptionMode) {\n      this.editSubscriptionMode = { ...subscriptionMode };\n      this.subscriptionModeForm.name = subscriptionMode.name;\n    },\n    updateSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.updateSubscriptionMode(this.editSubscriptionMode._id, this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.editSubscriptionMode = null;\n          this.subscriptionModeForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription mode!\", error);\n        });\n      }\n    },\n    deleteSubscriptionMode(id) {\n      subscriptionModeService.deleteSubscriptionMode(id).then(() => {\n        this.loadSubscriptionModes();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription mode!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionMode = null;\n      this.subscriptionModeForm.name = '';\n    },\n    searchSubscriptionModes() {\n      this.loadSubscriptionModes();\n    },\n    loadPage(url) {\n      this.loadSubscriptionModes(url);\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}