{"ast":null,"code":"import subscriptionLanguageService from '../services/subscriptionLanguageService';\nexport default {\n  data() {\n    return {\n      subscriptionLanguages: [],\n      subscriptionLanguageForm: {\n        name: ''\n      },\n      editSubscriptionLanguage: null\n    };\n  },\n  created() {\n    this.loadSubscriptionLanguages();\n  },\n  methods: {\n    loadSubscriptionLanguages() {\n      subscriptionLanguageService.getSubscriptionLanguages().then(response => {\n        this.subscriptionLanguages = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription languages!\", error);\n      });\n    },\n    addSubscriptionLanguage() {\n      if (this.subscriptionLanguageForm.name.trim()) {\n        subscriptionLanguageService.createSubscriptionLanguage(this.subscriptionLanguageForm).then(() => {\n          this.loadSubscriptionLanguages();\n          this.subscriptionLanguageForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription language!\", error);\n        });\n      }\n    },\n    editLanguage(subscriptionLanguage) {\n      this.editSubscriptionLanguage = {\n        ...subscriptionLanguage\n      };\n      this.subscriptionLanguageForm.name = subscriptionLanguage.name;\n    },\n    updateSubscriptionLanguage() {\n      if (this.subscriptionLanguageForm.name.trim()) {\n        subscriptionLanguageService.updateSubscriptionLanguage(this.editSubscriptionLanguage._id, this.subscriptionLanguageForm).then(() => {\n          this.loadSubscriptionLanguages();\n          this.editSubscriptionLanguage = null;\n          this.subscriptionLanguageForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription language!\", error);\n        });\n      }\n    },\n    deleteSubscriptionLanguage(id) {\n      subscriptionLanguageService.deleteSubscriptionLanguage(id).then(() => {\n        this.loadSubscriptionLanguages();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription language!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionLanguage = null;\n      this.subscriptionLanguageForm.name = '';\n    }\n  }\n};","map":{"version":3,"names":["subscriptionLanguageService","data","subscriptionLanguages","subscriptionLanguageForm","name","editSubscriptionLanguage","created","loadSubscriptionLanguages","methods","getSubscriptionLanguages","then","response","catch","error","console","addSubscriptionLanguage","trim","createSubscriptionLanguage","editLanguage","subscriptionLanguage","updateSubscriptionLanguage","_id","deleteSubscriptionLanguage","id","cancelEdit"],"sources":["C:\\Users\\santoshdesai\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriptionLanguages.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscription Languages</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscription Languages</li>\n      </ol>\n    </nav>\n\n    <!-- Add Subscription Language Form -->\n    <form @submit.prevent=\"addSubscriptionLanguage\">\n      <div class=\"mb-3\">\n        <input\n          type=\"text\"\n          v-model=\"subscriptionLanguageForm.name\"\n          placeholder=\"New Subscription Language Name\"\n          class=\"form-control\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add</button>\n    </form>\n\n    <!-- Edit Subscription Language Form (conditional) -->\n    <div v-if=\"editSubscriptionLanguage\">\n      <h3>Edit Subscription Language</h3>\n      <form @submit.prevent=\"updateSubscriptionLanguage\">\n        <div class=\"mb-3\">\n          <input\n            type=\"text\"\n            v-model=\"subscriptionLanguageForm.name\"\n            placeholder=\"Edit Subscription Language Name\"\n            class=\"form-control\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-success mt-2\">Save</button>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" @click=\"cancelEdit\">Cancel</button>\n      </form>\n    </div>\n\n    <!-- Subscription Languages Table -->\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"subscriptionLanguage in subscriptionLanguages\" :key=\"subscriptionLanguage._id\">\n          <td>{{ subscriptionLanguage.name }}</td>\n          <td>\n            <button class=\"btn btn-warning btn-sm\" @click=\"editLanguage(subscriptionLanguage)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteSubscriptionLanguage(subscriptionLanguage._id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport subscriptionLanguageService from '../services/subscriptionLanguageService';\n\nexport default {\n  data() {\n    return {\n      subscriptionLanguages: [],\n      subscriptionLanguageForm: {\n        name: ''\n      },\n      editSubscriptionLanguage: null\n    };\n  },\n  created() {\n    this.loadSubscriptionLanguages();\n  },\n  methods: {\n    loadSubscriptionLanguages() {\n      subscriptionLanguageService.getSubscriptionLanguages().then(response => {\n        this.subscriptionLanguages = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription languages!\", error);\n      });\n    },\n    addSubscriptionLanguage() {\n      if (this.subscriptionLanguageForm.name.trim()) {\n        subscriptionLanguageService.createSubscriptionLanguage(this.subscriptionLanguageForm).then(() => {\n          this.loadSubscriptionLanguages();\n          this.subscriptionLanguageForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription language!\", error);\n        });\n      }\n    },\n    editLanguage(subscriptionLanguage) {\n      this.editSubscriptionLanguage = { ...subscriptionLanguage };\n      this.subscriptionLanguageForm.name = subscriptionLanguage.name;\n    },\n    updateSubscriptionLanguage() {\n      if (this.subscriptionLanguageForm.name.trim()) {\n        subscriptionLanguageService.updateSubscriptionLanguage(this.editSubscriptionLanguage._id, this.subscriptionLanguageForm).then(() => {\n          this.loadSubscriptionLanguages();\n          this.editSubscriptionLanguage = null;\n          this.subscriptionLanguageForm.name = '';\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription language!\", error);\n        });\n      }\n    },\n    deleteSubscriptionLanguage(id) {\n      subscriptionLanguageService.deleteSubscriptionLanguage(id).then(() => {\n        this.loadSubscriptionLanguages();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription language!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionLanguage = null;\n      this.subscriptionLanguageForm.name = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"AA8DA,OAAOA,2BAA0B,MAAO,yCAAyC;AAEjF,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,qBAAqB,EAAE,EAAE;MACzBC,wBAAwB,EAAE;QACxBC,IAAI,EAAE;MACR,CAAC;MACDC,wBAAwB,EAAE;IAC5B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,yBAAyB,CAAC,CAAC;EAClC,CAAC;EACDC,OAAO,EAAE;IACPD,yBAAyBA,CAAA,EAAG;MAC1BP,2BAA2B,CAACS,wBAAwB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACtE,IAAI,CAACT,qBAAoB,GAAIS,QAAQ,CAACV,IAAI;MAC5C,CAAC,CAAC,CAACW,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;MACnF,CAAC,CAAC;IACJ,CAAC;IACDE,uBAAuBA,CAAA,EAAG;MACxB,IAAI,IAAI,CAACZ,wBAAwB,CAACC,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;QAC7ChB,2BAA2B,CAACiB,0BAA0B,CAAC,IAAI,CAACd,wBAAwB,CAAC,CAACO,IAAI,CAAC,MAAM;UAC/F,IAAI,CAACH,yBAAyB,CAAC,CAAC;UAChC,IAAI,CAACJ,wBAAwB,CAACC,IAAG,GAAI,EAAE;QACzC,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,sDAAsD,EAAEA,KAAK,CAAC;QAC9E,CAAC,CAAC;MACJ;IACF,CAAC;IACDK,YAAYA,CAACC,oBAAoB,EAAE;MACjC,IAAI,CAACd,wBAAuB,GAAI;QAAE,GAAGc;MAAqB,CAAC;MAC3D,IAAI,CAAChB,wBAAwB,CAACC,IAAG,GAAIe,oBAAoB,CAACf,IAAI;IAChE,CAAC;IACDgB,0BAA0BA,CAAA,EAAG;MAC3B,IAAI,IAAI,CAACjB,wBAAwB,CAACC,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;QAC7ChB,2BAA2B,CAACoB,0BAA0B,CAAC,IAAI,CAACf,wBAAwB,CAACgB,GAAG,EAAE,IAAI,CAAClB,wBAAwB,CAAC,CAACO,IAAI,CAAC,MAAM;UAClI,IAAI,CAACH,yBAAyB,CAAC,CAAC;UAChC,IAAI,CAACF,wBAAuB,GAAI,IAAI;UACpC,IAAI,CAACF,wBAAwB,CAACC,IAAG,GAAI,EAAE;QACzC,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;QAChF,CAAC,CAAC;MACJ;IACF,CAAC;IACDS,0BAA0BA,CAACC,EAAE,EAAE;MAC7BvB,2BAA2B,CAACsB,0BAA0B,CAACC,EAAE,CAAC,CAACb,IAAI,CAAC,MAAM;QACpE,IAAI,CAACH,yBAAyB,CAAC,CAAC;MAClC,CAAC,CAAC,CAACK,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;MAChF,CAAC,CAAC;IACJ,CAAC;IACDW,UAAUA,CAAA,EAAG;MACX,IAAI,CAACnB,wBAAuB,GAAI,IAAI;MACpC,IAAI,CAACF,wBAAwB,CAACC,IAAG,GAAI,EAAE;IACzC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}