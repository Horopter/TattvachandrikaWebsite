{"ast":null,"code":"import magazineSubscriberService from '@/services/magazineSubscriberService';\nexport default {\n  props: {\n    subscriber: Object,\n    isEdit: Boolean\n  },\n  data() {\n    return {\n      showModal: false,\n      form: {\n        name: '',\n        registration_number: '',\n        address: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: '',\n        stype: '',\n        notes: ''\n      },\n      categories: [],\n      types: []\n    };\n  },\n  methods: {\n    open() {\n      this.showModal = true;\n      if (this.isEdit && this.subscriber) {\n        this.form = {\n          ...this.subscriber\n        };\n        this.form.category = this.subscriber.category._id;\n        this.form.stype = this.subscriber.stype._id;\n      }\n      this.fetchCategories();\n      this.fetchTypes();\n    },\n    close() {\n      this.showModal = false;\n      this.$emit('close');\n    },\n    submitForm() {\n      if (this.isEdit) {\n        magazineSubscriberService.updateSubscriber(this.subscriber._id, this.form).then(() => {\n          this.close();\n          this.$emit('save');\n        });\n      } else {\n        magazineSubscriberService.createSubscriber(this.form).then(() => {\n          this.close();\n          this.$emit('save');\n        });\n      }\n    },\n    fetchCategories() {\n      magazineSubscriberService.getCategories().then(response => {\n        this.categories = response.data;\n      });\n    },\n    fetchTypes() {\n      magazineSubscriberService.getTypes().then(response => {\n        this.types = response.data;\n      });\n    }\n  },\n  watch: {\n    subscriber(newVal) {\n      if (this.isEdit && newVal) {\n        this.form = {\n          ...newVal\n        };\n        this.form.category = newVal.category._id;\n        this.form.stype = newVal.stype._id;\n      }\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","props","subscriber","Object","isEdit","Boolean","data","showModal","form","name","registration_number","address","city_town","state","pincode","phone","email","category","stype","notes","categories","types","methods","open","_id","fetchCategories","fetchTypes","close","$emit","submitForm","updateSubscriber","then","createSubscriber","getCategories","response","getTypes","watch","newVal"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\AddEditSubscriberModal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"close\">&times;</span>\r\n        <h2>{{ isEdit ? 'Edit Subscriber' : 'Add Subscriber' }}</h2>\r\n        <form @submit.prevent=\"submitForm\">\r\n          <div>\r\n            <label>Name:</label>\r\n            <input type=\"text\" v-model=\"form.name\" required />\r\n          </div>\r\n          <div>\r\n            <label>Registration Number:</label>\r\n            <input type=\"text\" v-model=\"form.registration_number\" required />\r\n          </div>\r\n          <div>\r\n            <label>Address:</label>\r\n            <textarea v-model=\"form.address\" required></textarea>\r\n          </div>\r\n          <div>\r\n            <label>City/Town:</label>\r\n            <input type=\"text\" v-model=\"form.city_town\" required />\r\n          </div>\r\n          <div>\r\n            <label>State:</label>\r\n            <input type=\"text\" v-model=\"form.state\" required />\r\n          </div>\r\n          <div>\r\n            <label>Pincode:</label>\r\n            <input type=\"text\" v-model=\"form.pincode\" required />\r\n          </div>\r\n          <div>\r\n            <label>Phone:</label>\r\n            <input type=\"text\" v-model=\"form.phone\" required />\r\n          </div>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input type=\"email\" v-model=\"form.email\" required />\r\n          </div>\r\n          <div>\r\n            <label>Category:</label>\r\n            <select v-model=\"form.category\" required>\r\n              <option v-for=\"category in categories\" :key=\"category._id\" :value=\"category._id\">\r\n                {{ category.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Type:</label>\r\n            <select v-model=\"form.stype\" required>\r\n              <option v-for=\"type in types\" :key=\"type._id\" :value=\"type._id\">\r\n                {{ type.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Notes:</label>\r\n            <textarea v-model=\"form.notes\"></textarea>\r\n          </div>\r\n          <button type=\"submit\">{{ isEdit ? 'Update' : 'Add' }}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '@/services/magazineSubscriberService';\r\n\r\nexport default {\r\n  props: {\r\n    subscriber: Object,\r\n    isEdit: Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      showModal: false,\r\n      form: {\r\n        name: '',\r\n        registration_number: '',\r\n        address: '',\r\n        city_town: '',\r\n        state: '',\r\n        pincode: '',\r\n        phone: '',\r\n        email: '',\r\n        category: '',\r\n        stype: '',\r\n        notes: '',\r\n      },\r\n      categories: [],\r\n      types: [],\r\n    };\r\n  },\r\n  methods: {\r\n    open() {\r\n      this.showModal = true;\r\n      if (this.isEdit && this.subscriber) {\r\n        this.form = { ...this.subscriber };\r\n        this.form.category = this.subscriber.category._id;\r\n        this.form.stype = this.subscriber.stype._id;\r\n      }\r\n      this.fetchCategories();\r\n      this.fetchTypes();\r\n    },\r\n    close() {\r\n      this.showModal = false;\r\n      this.$emit('close');\r\n    },\r\n    submitForm() {\r\n      if (this.isEdit) {\r\n        magazineSubscriberService.updateSubscriber(this.subscriber._id, this.form).then(() => {\r\n          this.close();\r\n          this.$emit('save');\r\n        });\r\n      } else {\r\n        magazineSubscriberService.createSubscriber(this.form).then(() => {\r\n          this.close();\r\n          this.$emit('save');\r\n        });\r\n      }\r\n    },\r\n    fetchCategories() {\r\n      magazineSubscriberService.getCategories().then((response) => {\r\n        this.categories = response.data;\r\n      });\r\n    },\r\n    fetchTypes() {\r\n      magazineSubscriberService.getTypes().then((response) => {\r\n        this.types = response.data;\r\n      });\r\n    },\r\n  },\r\n  watch: {\r\n    subscriber(newVal) {\r\n      if (this.isEdit && newVal) {\r\n        this.form = { ...newVal };\r\n        this.form.category = newVal.category._id;\r\n        this.form.stype = newVal.stype._id;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}