{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0cd25ccd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Subscription Plans\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  \"aria-label\": \"breadcrumb\"\n};\nconst _hoisted_4 = {\n  class: \"breadcrumb\"\n};\nconst _hoisted_5 = {\n  class: \"breadcrumb-item\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", {\n  class: \"breadcrumb-item active\",\n  \"aria-current\": \"page\"\n}, \"Subscription Plans\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = {\n  class: \"mb-3\"\n};\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = {\n  class: \"mb-3\"\n};\nconst _hoisted_12 = [\"value\"];\nconst _hoisted_13 = {\n  class: \"mb-3\"\n};\nconst _hoisted_14 = [\"value\"];\nconst _hoisted_15 = {\n  class: \"mb-3\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary mt-2\"\n}, \"Add\", -1 /* HOISTED */));\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Edit Subscription Plan\", -1 /* HOISTED */));\nconst _hoisted_19 = {\n  class: \"mb-3\"\n};\nconst _hoisted_20 = {\n  class: \"mb-3\"\n};\nconst _hoisted_21 = {\n  class: \"mb-3\"\n};\nconst _hoisted_22 = {\n  class: \"mb-3\"\n};\nconst _hoisted_23 = {\n  class: \"mb-3\"\n};\nconst _hoisted_24 = [\"value\"];\nconst _hoisted_25 = {\n  class: \"mb-3\"\n};\nconst _hoisted_26 = [\"value\"];\nconst _hoisted_27 = {\n  class: \"mb-3\"\n};\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-success mt-2\"\n}, \"Save\", -1 /* HOISTED */));\nconst _hoisted_29 = {\n  class: \"table table-striped mt-4\"\n};\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Version\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Start Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Subscription Price\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Language\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Mode\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Duration\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */));\nconst _hoisted_31 = [\"onClick\"];\nconst _hoisted_32 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"nav\", _hoisted_3, [_createElementVNode(\"ol\", _hoisted_4, [_createElementVNode(\"li\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Home\")]),\n    _: 1 /* STABLE */\n  })]), _hoisted_6])]), _createCommentVNode(\" Add Subscription Plan Form \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.addSubscriptionPlan && $options.addSubscriptionPlan(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.subscriptionPlanForm.version = $event),\n    placeholder: \"Version\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.version]])]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.subscriptionPlanForm.name = $event),\n    placeholder: \"Name\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.name]])]), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.subscriptionPlanForm.start_date = $event),\n    placeholder: \"Start Date\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.start_date]])]), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.subscriptionPlanForm.subscription_price = $event),\n    placeholder: \"Subscription Price\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.subscription_price]])]), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.subscriptionPlanForm.subscription_language = $event),\n    class: \"form-control\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subscriptionLanguages, language => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: language._id,\n      value: language._id\n    }, _toDisplayString(language.name), 9 /* TEXT, PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.subscriptionPlanForm.subscription_language]])]), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.subscriptionPlanForm.subscription_mode = $event),\n    class: \"form-control\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subscriptionModes, mode => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: mode._id,\n      value: mode._id\n    }, _toDisplayString(mode.name), 9 /* TEXT, PROPS */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.subscriptionPlanForm.subscription_mode]])]), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.subscriptionPlanForm.duration_in_months = $event),\n    placeholder: \"Duration in Months\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.duration_in_months]])]), _hoisted_16], 32 /* NEED_HYDRATION */), _createCommentVNode(\" Edit Subscription Plan Form (conditional) \"), $data.editSubscriptionPlan ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"form\", {\n    onSubmit: _cache[16] || (_cache[16] = _withModifiers((...args) => $options.updateSubscriptionPlan && $options.updateSubscriptionPlan(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.subscriptionPlanForm.version = $event),\n    placeholder: \"Version\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.version]])]), _createElementVNode(\"div\", _hoisted_20, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.subscriptionPlanForm.name = $event),\n    placeholder: \"Name\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.name]])]), _createElementVNode(\"div\", _hoisted_21, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.subscriptionPlanForm.start_date = $event),\n    placeholder: \"Start Date\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.start_date]])]), _createElementVNode(\"div\", _hoisted_22, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.subscriptionPlanForm.subscription_price = $event),\n    placeholder: \"Subscription Price\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.subscription_price]])]), _createElementVNode(\"div\", _hoisted_23, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.subscriptionPlanForm.subscription_language = $event),\n    class: \"form-control\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subscriptionLanguages, language => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: language._id,\n      value: language._id\n    }, _toDisplayString(language.name), 9 /* TEXT, PROPS */, _hoisted_24);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.subscriptionPlanForm.subscription_language]])]), _createElementVNode(\"div\", _hoisted_25, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.subscriptionPlanForm.subscription_mode = $event),\n    class: \"form-control\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subscriptionModes, mode => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: mode._id,\n      value: mode._id\n    }, _toDisplayString(mode.name), 9 /* TEXT, PROPS */, _hoisted_26);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.subscriptionPlanForm.subscription_mode]])]), _createElementVNode(\"div\", _hoisted_27, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.subscriptionPlanForm.duration_in_months = $event),\n    placeholder: \"Duration in Months\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscriptionPlanForm.duration_in_months]])]), _hoisted_28, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary mt-2\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"Cancel\")], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Subscription Plans Table \"), _createElementVNode(\"table\", _hoisted_29, [_hoisted_30, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subscriptionPlans, subscriptionPlan => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: subscriptionPlan._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.version), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.start_date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.subscription_price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.subscription_language.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.subscription_mode.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscriptionPlan.duration_in_months), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-warning btn-sm\",\n      onClick: $event => $options.editPlan(subscriptionPlan)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_31), _createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $options.deleteSubscriptionPlan(subscriptionPlan._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_32)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_hoisted_6","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","addSubscriptionPlan","_hoisted_7","$event","$data","subscriptionPlanForm","version","placeholder","_hoisted_8","name","_hoisted_9","start_date","_hoisted_10","subscription_price","_hoisted_11","subscription_language","_Fragment","_renderList","subscriptionLanguages","language","_id","value","_hoisted_12","_hoisted_13","subscription_mode","subscriptionModes","mode","_hoisted_14","_hoisted_15","duration_in_months","_hoisted_16","editSubscriptionPlan","_hoisted_17","_hoisted_18","updateSubscriptionPlan","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","onClick","cancelEdit","_hoisted_29","_hoisted_30","subscriptionPlans","subscriptionPlan","_toDisplayString","editPlan","_hoisted_31","deleteSubscriptionPlan","_hoisted_32"],"sources":["C:\\Users\\santoshdesai\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriptionPlans.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscription Plans</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Subscription Plans</li>\n      </ol>\n    </nav>\n\n    <!-- Add Subscription Plan Form -->\n    <form @submit.prevent=\"addSubscriptionPlan\">\n      <div class=\"mb-3\">\n        <input\n          type=\"text\"\n          v-model=\"subscriptionPlanForm.version\"\n          placeholder=\"Version\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <input\n          type=\"text\"\n          v-model=\"subscriptionPlanForm.name\"\n          placeholder=\"Name\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <input\n          type=\"date\"\n          v-model=\"subscriptionPlanForm.start_date\"\n          placeholder=\"Start Date\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <input\n          type=\"number\"\n          v-model=\"subscriptionPlanForm.subscription_price\"\n          placeholder=\"Subscription Price\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <select v-model=\"subscriptionPlanForm.subscription_language\" class=\"form-control\">\n          <option v-for=\"language in subscriptionLanguages\" :key=\"language._id\" :value=\"language._id\">{{ language.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <select v-model=\"subscriptionPlanForm.subscription_mode\" class=\"form-control\">\n          <option v-for=\"mode in subscriptionModes\" :key=\"mode._id\" :value=\"mode._id\">{{ mode.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <input\n          type=\"number\"\n          v-model=\"subscriptionPlanForm.duration_in_months\"\n          placeholder=\"Duration in Months\"\n          class=\"form-control\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add</button>\n    </form>\n\n    <!-- Edit Subscription Plan Form (conditional) -->\n    <div v-if=\"editSubscriptionPlan\">\n      <h3>Edit Subscription Plan</h3>\n      <form @submit.prevent=\"updateSubscriptionPlan\">\n        <div class=\"mb-3\">\n          <input\n            type=\"text\"\n            v-model=\"subscriptionPlanForm.version\"\n            placeholder=\"Version\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"mb-3\">\n          <input\n            type=\"text\"\n            v-model=\"subscriptionPlanForm.name\"\n            placeholder=\"Name\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"mb-3\">\n          <input\n            type=\"date\"\n            v-model=\"subscriptionPlanForm.start_date\"\n            placeholder=\"Start Date\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"mb-3\">\n          <input\n            type=\"number\"\n            v-model=\"subscriptionPlanForm.subscription_price\"\n            placeholder=\"Subscription Price\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"mb-3\">\n          <select v-model=\"subscriptionPlanForm.subscription_language\" class=\"form-control\">\n            <option v-for=\"language in subscriptionLanguages\" :key=\"language._id\" :value=\"language._id\">{{ language.name }}</option>\n          </select>\n        </div>\n        <div class=\"mb-3\">\n          <select v-model=\"subscriptionPlanForm.subscription_mode\" class=\"form-control\">\n            <option v-for=\"mode in subscriptionModes\" :key=\"mode._id\" :value=\"mode._id\">{{ mode.name }}</option>\n          </select>\n        </div>\n        <div class=\"mb-3\">\n          <input\n            type=\"number\"\n            v-model=\"subscriptionPlanForm.duration_in_months\"\n            placeholder=\"Duration in Months\"\n            class=\"form-control\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-success mt-2\">Save</button>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" @click=\"cancelEdit\">Cancel</button>\n      </form>\n    </div>\n\n    <!-- Subscription Plans Table -->\n    <table class=\"table table-striped mt-4\">\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th>Name</th>\n          <th>Start Date</th>\n          <th>Subscription Price</th>\n          <th>Language</th>\n          <th>Mode</th>\n          <th>Duration</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"subscriptionPlan in subscriptionPlans\" :key=\"subscriptionPlan._id\">\n          <td>{{ subscriptionPlan.version }}</td>\n          <td>{{ subscriptionPlan.name }}</td>\n          <td>{{ subscriptionPlan.start_date }}</td>\n          <td>{{ subscriptionPlan.subscription_price }}</td>\n          <td>{{ subscriptionPlan.subscription_language.name }}</td>\n          <td>{{ subscriptionPlan.subscription_mode.name }}</td>\n          <td>{{ subscriptionPlan.duration_in_months }}</td>\n          <td>\n            <button class=\"btn btn-warning btn-sm\" @click=\"editPlan(subscriptionPlan)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteSubscriptionPlan(subscriptionPlan._id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport subscriptionPlanService from '../services/subscriptionPlanService';\nimport subscriptionLanguageService from '../services/subscriptionLanguageService';\nimport subscriptionModeService from '../services/subscriptionModeService';\n\nexport default {\n  data() {\n    return {\n      subscriptionPlans: [],\n      subscriptionLanguages: [],\n      subscriptionModes: [],\n      subscriptionPlanForm: {\n        version: '',\n        name: '',\n        start_date: '',\n        subscription_price: 0,\n        subscription_language: '',\n        subscription_mode: '',\n        duration_in_months: 0\n      },\n      editSubscriptionPlan: null\n    };\n  },\n  created() {\n    this.loadSubscriptionPlans();\n    this.loadSubscriptionLanguages();\n    this.loadSubscriptionModes();\n  },\n  methods: {\n    loadSubscriptionPlans() {\n      subscriptionPlanService.getSubscriptionPlans().then(response => {\n        this.subscriptionPlans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription plans!\", error);\n      });\n    },\n    loadSubscriptionLanguages() {\n      subscriptionLanguageService.getSubscriptionLanguages().then(response => {\n        this.subscriptionLanguages = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription languages!\", error);\n      });\n    },\n    loadSubscriptionModes() {\n      subscriptionModeService.getSubscriptionModes().then(response => {\n        this.subscriptionModes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription modes!\", error);\n      });\n    },\n    addSubscriptionPlan() {\n      if (this.subscriptionPlanForm.name.trim()) {\n        subscriptionPlanService.createSubscriptionPlan(this.subscriptionPlanForm).then(() => {\n          this.loadSubscriptionPlans();\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription plan!\", error);\n        });\n      }\n    },\n    editPlan(subscriptionPlan) {\n      this.editSubscriptionPlan = { ...subscriptionPlan };\n      this.subscriptionPlanForm = { ...subscriptionPlan, subscription_language: subscriptionPlan.subscription_language._id, subscription_mode: subscriptionPlan.subscription_mode._id };\n    },\n    updateSubscriptionPlan() {\n      if (this.subscriptionPlanForm.name.trim()) {\n        subscriptionPlanService.updateSubscriptionPlan(this.editSubscriptionPlan._id, this.subscriptionPlanForm).then(() => {\n          this.loadSubscriptionPlans();\n          this.editSubscriptionPlan = null;\n          this.resetForm();\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription plan!\", error);\n        });\n      }\n    },\n    deleteSubscriptionPlan(id) {\n      subscriptionPlanService.deleteSubscriptionPlan(id).then(() => {\n        this.loadSubscriptionPlans();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription plan!\", error);\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionPlan = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.subscriptionPlanForm = {\n        version: '',\n        name: '',\n        start_date: '',\n        subscription_price: 0,\n        subscription_language: '',\n        subscription_mode: '',\n        duration_in_months: 0\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}