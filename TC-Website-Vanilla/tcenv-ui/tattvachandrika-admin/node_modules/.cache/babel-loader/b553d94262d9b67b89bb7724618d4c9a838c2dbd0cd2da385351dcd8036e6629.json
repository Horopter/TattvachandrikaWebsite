{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport subscriptionService from '../services/subscriptionService';\nimport subscriptionPlanService from '../services/subscriptionPlanService';\nimport magazineSubscriberService from '../services/magazineSubscriberService';\nexport default {\n  data() {\n    return {\n      subscriptionForm: {\n        subscriber: this.$route.params.subscriberId,\n        subscription_plan: '',\n        start_date: '',\n        end_date: '',\n        active: true\n      },\n      subscriptionPlans: [],\n      subscriberName: ''\n    };\n  },\n  created() {\n    this.loadSubscriptionPlans();\n    this.loadSubscriberName();\n  },\n  methods: {\n    loadSubscriptionPlans() {\n      subscriptionPlanService.getSubscriptionPlans().then(response => {\n        this.subscriptionPlans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription plans!\", error);\n      });\n    },\n    loadSubscriberName() {\n      magazineSubscriberService.getMagazineSubscriberById(this.$route.params.subscriberId).then(response => {\n        this.subscriberName = response.data.name;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber name!\", error);\n      });\n    },\n    calculateEndDate(startDate, durationInMonths) {\n      const start = new Date(startDate);\n      const end = new Date(start);\n      end.setMonth(end.getMonth() + durationInMonths);\n      return end.toISOString().split('T')[0]; // Format as YYYY-MM-DD\n    },\n    addSubscription() {\n      const selectedPlan = this.subscriptionPlans.find(plan => plan._id === this.subscriptionForm.subscription_plan);\n      if (selectedPlan) {\n        this.subscriptionForm.end_date = this.calculateEndDate(this.subscriptionForm.start_date, selectedPlan.duration_in_months);\n        subscriptionService.createSubscription(this.subscriptionForm).then(() => {\n          this.$router.push('/subscribers');\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription!\", error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["subscriptionService","subscriptionPlanService","magazineSubscriberService","data","subscriptionForm","subscriber","$route","params","subscriberId","subscription_plan","start_date","end_date","active","subscriptionPlans","subscriberName","created","loadSubscriptionPlans","loadSubscriberName","methods","getSubscriptionPlans","then","response","catch","error","console","getMagazineSubscriberById","name","calculateEndDate","startDate","durationInMonths","start","Date","end","setMonth","getMonth","toISOString","split","addSubscription","selectedPlan","find","plan","_id","duration_in_months","createSubscription","$router","push"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\AddSubscription.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Add Subscription for {{ subscriberName }}</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item\"><router-link to=\"/subscribers\">Magazine Subscribers</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Add Subscription</li>\n      </ol>\n    </nav>\n\n    <form @submit.prevent=\"addSubscription\">\n      <div class=\"mb-3\">\n        <label for=\"subscription_plan\">Subscription Plan</label>\n        <select id=\"subscription_plan\" v-model=\"subscriptionForm.subscription_plan\" class=\"form-control\">\n          <option v-for=\"plan in subscriptionPlans\" :key=\"plan._id\" :value=\"plan._id\">{{ plan.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"start_date\">Start Date</label>\n        <input\n          type=\"date\"\n          id=\"start_date\"\n          v-model=\"subscriptionForm.start_date\"\n          placeholder=\"Start Date\"\n          class=\"form-control\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"active\">Active</label>\n        <input\n          type=\"checkbox\"\n          id=\"active\"\n          v-model=\"subscriptionForm.active\"\n          class=\"form-check-input\"\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">Add Subscription</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport subscriptionService from '../services/subscriptionService';\nimport subscriptionPlanService from '../services/subscriptionPlanService';\nimport magazineSubscriberService from '../services/magazineSubscriberService';\n\nexport default {\n  data() {\n    return {\n      subscriptionForm: {\n        subscriber: this.$route.params.subscriberId,\n        subscription_plan: '',\n        start_date: '',\n        end_date: '',\n        active: true\n      },\n      subscriptionPlans: [],\n      subscriberName: ''\n    };\n  },\n  created() {\n    this.loadSubscriptionPlans();\n    this.loadSubscriberName();\n  },\n  methods: {\n    loadSubscriptionPlans() {\n      subscriptionPlanService.getSubscriptionPlans().then(response => {\n        this.subscriptionPlans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription plans!\", error);\n      });\n    },\n    loadSubscriberName() {\n      magazineSubscriberService.getMagazineSubscriberById(this.$route.params.subscriberId).then(response => {\n        this.subscriberName = response.data.name;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber name!\", error);\n      });\n    },\n    calculateEndDate(startDate, durationInMonths) {\n      const start = new Date(startDate);\n      const end = new Date(start);\n      end.setMonth(end.getMonth() + durationInMonths);\n      return end.toISOString().split('T')[0]; // Format as YYYY-MM-DD\n    },\n    addSubscription() {\n      const selectedPlan = this.subscriptionPlans.find(plan => plan._id === this.subscriptionForm.subscription_plan);\n      if (selectedPlan) {\n        this.subscriptionForm.end_date = this.calculateEndDate(this.subscriptionForm.start_date, selectedPlan.duration_in_months);\n        subscriptionService.createSubscription(this.subscriptionForm).then(() => {\n          this.$router.push('/subscribers');\n        }).catch(error => {\n          console.error(\"There was an error adding the subscription!\", error);\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";AA2CA,OAAOA,mBAAkB,MAAO,iCAAiC;AACjE,OAAOC,uBAAsB,MAAO,qCAAqC;AACzE,OAAOC,yBAAwB,MAAO,uCAAuC;AAE7E,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;QAChBC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,YAAY;QAC3CC,iBAAiB,EAAE,EAAE;QACrBC,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;MACDC,iBAAiB,EAAE,EAAE;MACrBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACPF,qBAAqBA,CAAA,EAAG;MACtBf,uBAAuB,CAACkB,oBAAoB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QAC9D,IAAI,CAACR,iBAAgB,GAAIQ,QAAQ,CAAClB,IAAI;MACxC,CAAC,CAAC,CAACmB,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;MAC/E,CAAC,CAAC;IACJ,CAAC;IACDN,kBAAkBA,CAAA,EAAG;MACnBf,yBAAyB,CAACuB,yBAAyB,CAAC,IAAI,CAACnB,MAAM,CAACC,MAAM,CAACC,YAAY,CAAC,CAACY,IAAI,CAACC,QAAO,IAAK;QACpG,IAAI,CAACP,cAAa,GAAIO,QAAQ,CAAClB,IAAI,CAACuB,IAAI;MAC1C,CAAC,CAAC,CAACJ,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;MAC5E,CAAC,CAAC;IACJ,CAAC;IACDI,gBAAgBA,CAACC,SAAS,EAAEC,gBAAgB,EAAE;MAC5C,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAACH,SAAS,CAAC;MACjC,MAAMI,GAAE,GAAI,IAAID,IAAI,CAACD,KAAK,CAAC;MAC3BE,GAAG,CAACC,QAAQ,CAACD,GAAG,CAACE,QAAQ,CAAC,IAAIL,gBAAgB,CAAC;MAC/C,OAAOG,GAAG,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC1C,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,MAAMC,YAAW,GAAI,IAAI,CAACzB,iBAAiB,CAAC0B,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,GAAE,KAAM,IAAI,CAACrC,gBAAgB,CAACK,iBAAiB,CAAC;MAC9G,IAAI6B,YAAY,EAAE;QAChB,IAAI,CAAClC,gBAAgB,CAACO,QAAO,GAAI,IAAI,CAACgB,gBAAgB,CAAC,IAAI,CAACvB,gBAAgB,CAACM,UAAU,EAAE4B,YAAY,CAACI,kBAAkB,CAAC;QACzH1C,mBAAmB,CAAC2C,kBAAkB,CAAC,IAAI,CAACvC,gBAAgB,CAAC,CAACgB,IAAI,CAAC,MAAM;UACvE,IAAI,CAACwB,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;QACnC,CAAC,CAAC,CAACvB,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;QACrE,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}