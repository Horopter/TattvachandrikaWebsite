{"ast":null,"code":"import magazineSubscriberService from '../services/magazineSubscriberService';\nimport confirmationModal from './ConfirmationModal.vue';\nexport default {\n  components: {\n    confirmationModal\n  },\n  data() {\n    return {\n      subscribers: [],\n      categories: [],\n      types: [],\n      editSubscriberId: null,\n      showConfirmationModal: false,\n      subscriberToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscribers();\n    this.loadCategories();\n    this.loadTypes();\n  },\n  methods: {\n    loadSubscribers() {\n      magazineSubscriberService.getMagazineSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscribers!\", error);\n      });\n    },\n    loadCategories() {\n      magazineSubscriberService.getCategories().then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the categories!\", error);\n      });\n    },\n    loadTypes() {\n      magazineSubscriberService.getTypes().then(response => {\n        this.types = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the types!\", error);\n      });\n    },\n    addSubscriber() {\n      const newSubscriber = {\n        name: '',\n        registration_number: '',\n        city_town: '',\n        state: '',\n        pincode: '',\n        phone: '',\n        email: '',\n        category: this.categories[0]._id,\n        stype: this.types[0]._id,\n        hasActiveSubscriptions: false\n      };\n      this.subscribers.unshift(newSubscriber);\n      this.editSubscriberId = newSubscriber._id;\n    },\n    editSubscriber(subscriberId) {\n      this.editSubscriberId = subscriberId;\n    },\n    saveSubscriber(subscriber) {\n      const subscriberData = {\n        ...subscriber,\n        category: subscriber.category,\n        stype: subscriber.stype\n      };\n      if (subscriber._id) {\n        magazineSubscriberService.updateMagazineSubscriber(subscriber._id, subscriberData).then(() => {\n          this.loadSubscribers();\n          this.editSubscriberId = null;\n        }).catch(error => {\n          console.error(\"There was an error updating the subscriber!\", error);\n        });\n      } else {\n        magazineSubscriberService.createMagazineSubscriber(subscriberData).then(() => {\n          this.loadSubscribers();\n          this.editSubscriberId = null;\n        }).catch(error => {\n          console.error(\"There was an error creating the subscriber!\", error);\n        });\n      }\n    },\n    confirmDeleteSubscriber(subscriberId) {\n      this.subscriberToDelete = subscriberId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n    },\n    deleteSubscriber() {\n      if (this.subscriberToDelete) {\n        magazineSubscriberService.deleteMagazineSubscriber(this.subscriberToDelete).then(() => {\n          this.loadSubscribers();\n          this.hideDeleteModal();\n        }).catch(error => {\n          console.error(\"There was an error deleting the subscriber!\", error);\n        });\n      }\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat._id === categoryId);\n      return category ? category.name : '';\n    },\n    getTypeName(typeId) {\n      const type = this.types.find(t => t._id === typeId);\n      return type ? type.name : '';\n    }\n  }\n};","map":{"version":3,"names":["magazineSubscriberService","confirmationModal","components","data","subscribers","categories","types","editSubscriberId","showConfirmationModal","subscriberToDelete","created","loadSubscribers","loadCategories","loadTypes","methods","getMagazineSubscribers","then","response","catch","error","console","getCategories","getTypes","addSubscriber","newSubscriber","name","registration_number","city_town","state","pincode","phone","email","category","_id","stype","hasActiveSubscriptions","unshift","editSubscriber","subscriberId","saveSubscriber","subscriber","subscriberData","updateMagazineSubscriber","createMagazineSubscriber","confirmDeleteSubscriber","hideDeleteModal","deleteSubscriber","deleteMagazineSubscriber","getCategoryName","categoryId","find","cat","getTypeName","typeId","type","t"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscribers.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Magazine Subscribers</li>\r\n      </ol>\r\n    </nav>\r\n    <h2>Magazine Subscribers</h2>\r\n    <button class=\"btn btn-primary mb-3\" @click=\"addSubscriber\">Add Subscriber</button>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Registration Number</th>\r\n          <th>City/Town</th>\r\n          <th>State</th>\r\n          <th>Pincode</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Category</th>\r\n          <th>Type</th>\r\n          <th>Has Active Subscriptions</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"subscriber in subscribers\" :key=\"subscriber._id\">\r\n          <td>{{ subscriber.name }}</td>\r\n          <td>{{ subscriber.registration_number }}</td>\r\n          <td>{{ subscriber.city_town }}</td>\r\n          <td>{{ subscriber.state }}</td>\r\n          <td>{{ subscriber.pincode }}</td>\r\n          <td>{{ subscriber.phone }}</td>\r\n          <td>{{ subscriber.email }}</td>\r\n          <td>{{ getCategoryName(subscriber.category) }}</td>\r\n          <td>{{ getTypeName(subscriber.stype) }}</td>\r\n          <td>{{ subscriber.hasActiveSubscriptions ? 'Yes' : 'No' }}</td>\r\n          <td>\r\n            <button class=\"btn btn-success btn-sm\" v-if=\"editSubscriberId === subscriber._id\" @click=\"saveSubscriber(subscriber)\">Save</button>\r\n            <button class=\"btn btn-warning btn-sm\" v-else @click=\"editSubscriber(subscriber._id)\">Edit</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"confirmDeleteSubscriber(subscriber._id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <confirmation-modal\r\n      v-if=\"showConfirmationModal\"\r\n      :show=\"showConfirmationModal\"\r\n      title=\"Confirm Delete\"\r\n      message=\"Are you sure you want to delete this subscriber?\"\r\n      @close=\"hideDeleteModal\"\r\n      @confirm=\"deleteSubscriber\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport magazineSubscriberService from '../services/magazineSubscriberService';\r\nimport confirmationModal from './ConfirmationModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    confirmationModal\r\n  },\r\n  data() {\r\n    return {\r\n      subscribers: [],\r\n      categories: [],\r\n      types: [],\r\n      editSubscriberId: null,\r\n      showConfirmationModal: false,\r\n      subscriberToDelete: null\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSubscribers();\r\n    this.loadCategories();\r\n    this.loadTypes();\r\n  },\r\n  methods: {\r\n    loadSubscribers() {\r\n      magazineSubscriberService.getMagazineSubscribers().then(response => {\r\n        this.subscribers = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscribers!\", error);\r\n      });\r\n    },\r\n    loadCategories() {\r\n      magazineSubscriberService.getCategories().then(response => {\r\n        this.categories = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the categories!\", error);\r\n      });\r\n    },\r\n    loadTypes() {\r\n      magazineSubscriberService.getTypes().then(response => {\r\n        this.types = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the types!\", error);\r\n      });\r\n    },\r\n    addSubscriber() {\r\n      const newSubscriber = {\r\n        name: '',\r\n        registration_number: '',\r\n        city_town: '',\r\n        state: '',\r\n        pincode: '',\r\n        phone: '',\r\n        email: '',\r\n        category: this.categories[0]._id,\r\n        stype: this.types[0]._id,\r\n        hasActiveSubscriptions: false\r\n      };\r\n      this.subscribers.unshift(newSubscriber);\r\n      this.editSubscriberId = newSubscriber._id;\r\n    },\r\n    editSubscriber(subscriberId) {\r\n      this.editSubscriberId = subscriberId;\r\n    },\r\n    saveSubscriber(subscriber) {\r\n      const subscriberData = {\r\n        ...subscriber,\r\n        category: subscriber.category,\r\n        stype: subscriber.stype\r\n      };\r\n      if (subscriber._id) {\r\n        magazineSubscriberService.updateMagazineSubscriber(subscriber._id, subscriberData).then(() => {\r\n          this.loadSubscribers();\r\n          this.editSubscriberId = null;\r\n        }).catch(error => {\r\n          console.error(\"There was an error updating the subscriber!\", error);\r\n        });\r\n      } else {\r\n        magazineSubscriberService.createMagazineSubscriber(subscriberData).then(() => {\r\n          this.loadSubscribers();\r\n          this.editSubscriberId = null;\r\n        }).catch(error => {\r\n          console.error(\"There was an error creating the subscriber!\", error);\r\n        });\r\n      }\r\n    },\r\n    confirmDeleteSubscriber(subscriberId) {\r\n      this.subscriberToDelete = subscriberId;\r\n      this.showConfirmationModal = true;\r\n    },\r\n    hideDeleteModal() {\r\n      this.showConfirmationModal = false;\r\n    },\r\n    deleteSubscriber() {\r\n      if (this.subscriberToDelete) {\r\n        magazineSubscriberService.deleteMagazineSubscriber(this.subscriberToDelete).then(() => {\r\n          this.loadSubscribers();\r\n          this.hideDeleteModal();\r\n        }).catch(error => {\r\n          console.error(\"There was an error deleting the subscriber!\", error);\r\n        });\r\n      }\r\n    },\r\n    getCategoryName(categoryId) {\r\n      const category = this.categories.find(cat => cat._id === categoryId);\r\n      return category ? category.name : '';\r\n    },\r\n    getTypeName(typeId) {\r\n      const type = this.types.find(t => t._id === typeId);\r\n      return type ? type.name : '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}