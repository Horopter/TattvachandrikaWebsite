{"ast":null,"code":"import subscriptionModeService from '../services/subscriptionModeService';\nexport default {\n  data() {\n    return {\n      subscriptionModes: [],\n      subscriptionModeForm: {\n        name: ''\n      },\n      editSubscriptionMode: null\n    };\n  },\n  created() {\n    this.loadSubscriptionModes();\n  },\n  methods: {\n    loadSubscriptionModes() {\n      subscriptionModeService.getSubscriptionModes().then(response => {\n        this.subscriptionModes = response.data;\n      });\n    },\n    addSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.createSubscriptionMode(this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.subscriptionModeForm.name = '';\n        });\n      }\n    },\n    editMode(subscriptionMode) {\n      this.editSubscriptionMode = {\n        ...subscriptionMode\n      };\n      this.subscriptionModeForm.name = subscriptionMode.name;\n    },\n    updateSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.updateSubscriptionMode(this.editSubscriptionMode._id, this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.editSubscriptionMode = null;\n          this.subscriptionModeForm.name = '';\n        });\n      }\n    },\n    deleteSubscriptionMode(id) {\n      subscriptionModeService.deleteSubscriptionMode(id).then(() => {\n        this.loadSubscriptionModes();\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionMode = null;\n      this.subscriptionModeForm.name = '';\n    }\n  }\n};","map":{"version":3,"names":["subscriptionModeService","data","subscriptionModes","subscriptionModeForm","name","editSubscriptionMode","created","loadSubscriptionModes","methods","getSubscriptionModes","then","response","addSubscriptionMode","trim","createSubscriptionMode","editMode","subscriptionMode","updateSubscriptionMode","_id","deleteSubscriptionMode","id","cancelEdit"],"sources":["C:/Users/santoshdesai/tcenv-ui/tattvachandrika-admin/src/services/subscriptionModeService.js"],"sourcesContent":["import subscriptionModeService from '../services/subscriptionModeService';\n\nexport default {\n  data() {\n    return {\n      subscriptionModes: [],\n      subscriptionModeForm: {\n        name: ''\n      },\n      editSubscriptionMode: null\n    };\n  },\n  created() {\n    this.loadSubscriptionModes();\n  },\n  methods: {\n    loadSubscriptionModes() {\n      subscriptionModeService.getSubscriptionModes().then(response => {\n        this.subscriptionModes = response.data;\n      });\n    },\n    addSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.createSubscriptionMode(this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.subscriptionModeForm.name = '';\n        });\n      }\n    },\n    editMode(subscriptionMode) {\n      this.editSubscriptionMode = { ...subscriptionMode };\n      this.subscriptionModeForm.name = subscriptionMode.name;\n    },\n    updateSubscriptionMode() {\n      if (this.subscriptionModeForm.name.trim()) {\n        subscriptionModeService.updateSubscriptionMode(this.editSubscriptionMode._id, this.subscriptionModeForm).then(() => {\n          this.loadSubscriptionModes();\n          this.editSubscriptionMode = null;\n          this.subscriptionModeForm.name = '';\n        });\n      }\n    },\n    deleteSubscriptionMode(id) {\n      subscriptionModeService.deleteSubscriptionMode(id).then(() => {\n        this.loadSubscriptionModes();\n      });\n    },\n    cancelEdit() {\n      this.editSubscriptionMode = null;\n      this.subscriptionModeForm.name = '';\n    }\n  }\n};"],"mappings":"AAAA,OAAOA,uBAAuB,MAAM,qCAAqC;AAEzE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,EAAE;MACrBC,oBAAoB,EAAE;QACpBC,IAAI,EAAE;MACR,CAAC;MACDC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,qBAAqB,CAAC,CAAC;EAC9B,CAAC;EACDC,OAAO,EAAE;IACPD,qBAAqBA,CAAA,EAAG;MACtBP,uBAAuB,CAACS,oBAAoB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QAC9D,IAAI,CAACT,iBAAiB,GAAGS,QAAQ,CAACV,IAAI;MACxC,CAAC,CAAC;IACJ,CAAC;IACDW,mBAAmBA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACT,oBAAoB,CAACC,IAAI,CAACS,IAAI,CAAC,CAAC,EAAE;QACzCb,uBAAuB,CAACc,sBAAsB,CAAC,IAAI,CAACX,oBAAoB,CAAC,CAACO,IAAI,CAAC,MAAM;UACnF,IAAI,CAACH,qBAAqB,CAAC,CAAC;UAC5B,IAAI,CAACJ,oBAAoB,CAACC,IAAI,GAAG,EAAE;QACrC,CAAC,CAAC;MACJ;IACF,CAAC;IACDW,QAAQA,CAACC,gBAAgB,EAAE;MACzB,IAAI,CAACX,oBAAoB,GAAG;QAAE,GAAGW;MAAiB,CAAC;MACnD,IAAI,CAACb,oBAAoB,CAACC,IAAI,GAAGY,gBAAgB,CAACZ,IAAI;IACxD,CAAC;IACDa,sBAAsBA,CAAA,EAAG;MACvB,IAAI,IAAI,CAACd,oBAAoB,CAACC,IAAI,CAACS,IAAI,CAAC,CAAC,EAAE;QACzCb,uBAAuB,CAACiB,sBAAsB,CAAC,IAAI,CAACZ,oBAAoB,CAACa,GAAG,EAAE,IAAI,CAACf,oBAAoB,CAAC,CAACO,IAAI,CAAC,MAAM;UAClH,IAAI,CAACH,qBAAqB,CAAC,CAAC;UAC5B,IAAI,CAACF,oBAAoB,GAAG,IAAI;UAChC,IAAI,CAACF,oBAAoB,CAACC,IAAI,GAAG,EAAE;QACrC,CAAC,CAAC;MACJ;IACF,CAAC;IACDe,sBAAsBA,CAACC,EAAE,EAAE;MACzBpB,uBAAuB,CAACmB,sBAAsB,CAACC,EAAE,CAAC,CAACV,IAAI,CAAC,MAAM;QAC5D,IAAI,CAACH,qBAAqB,CAAC,CAAC;MAC9B,CAAC,CAAC;IACJ,CAAC;IACDc,UAAUA,CAAA,EAAG;MACX,IAAI,CAAChB,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAACF,oBAAoB,CAACC,IAAI,GAAG,EAAE;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}