{"ast":null,"code":"import addEditSubscriptionModal from './AddEditSubscriptionModal.vue';\nimport magazineSubscriberService from '../services/magazineSubscriberService';\nimport subscriptionPlanService from '../services/subscriptionPlanService';\nimport paymentModeService from '../services/paymentModeService';\nexport default {\n  components: {\n    addEditSubscriptionModal\n  },\n  data() {\n    return {\n      subscriber: {},\n      activeSubscriptions: [],\n      inactiveSubscriptions: [],\n      subscriptionPlans: [],\n      paymentModes: [],\n      showAddEditSubscriptionModal: false,\n      currentSubscription: null\n    };\n  },\n  created() {\n    this.loadSubscriber();\n    this.loadSubscriptionPlans();\n    this.loadPaymentModes();\n  },\n  methods: {\n    loadSubscriber() {\n      const subscriberId = this.$route.params.id;\n      magazineSubscriberService.getMagazineSubscriberById(subscriberId).then(response => {\n        this.subscriber = response.data;\n        this.activeSubscriptions = this.subscriber.subscriptions.filter(sub => sub.active);\n        this.inactiveSubscriptions = this.subscriber.subscriptions.filter(sub => !sub.active);\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber details!\", error);\n      });\n    },\n    loadSubscriptionPlans() {\n      subscriptionPlanService.getPlans().then(response => {\n        this.subscriptionPlans = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscription plans!\", error);\n      });\n    },\n    loadPaymentModes() {\n      paymentModeService.getPaymentModes().then(response => {\n        this.paymentModes = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the payment modes!\", error);\n      });\n    },\n    openAddSubscriptionModal() {\n      this.currentSubscription = {\n        start_date: '',\n        subscription_plan: '',\n        payment_status: 'Pending',\n        payment_mode: '',\n        payment_date: ''\n      };\n      this.showAddEditSubscriptionModal = true;\n    },\n    openEditSubscriptionModal(subscription) {\n      this.currentSubscription = {\n        ...subscription\n      };\n      this.showAddEditSubscriptionModal = true;\n    },\n    closeAddEditSubscriptionModal() {\n      this.showAddEditSubscriptionModal = false;\n    },\n    saveSubscription(subscription) {\n      subscription.subscriber = this.subscriber._id;\n      if (subscription._id) {\n        magazineSubscriberService.updateSubscription(subscription._id, subscription).then(() => {\n          this.loadSubscriber();\n        }).catch(error => {\n          console.error(\"There was an error updating the subscription!\", error);\n        });\n      } else {\n        magazineSubscriberService.createSubscription(subscription).then(() => {\n          this.loadSubscriber();\n        }).catch(error => {\n          console.error(\"There was an error creating the subscription!\", error);\n        });\n      }\n      this.closeAddEditSubscriptionModal();\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat._id === categoryId);\n      return category ? category.name : '';\n    },\n    getTypeName(typeId) {\n      const type = this.types.find(typ => typ._id === typeId);\n      return type ? type.name : '';\n    },\n    getPlanName(planId) {\n      const plan = this.subscriptionPlans.find(plan => plan._id === planId);\n      return plan ? plan.name : '';\n    },\n    getPaymentModeName(paymentModeId) {\n      const mode = this.paymentModes.find(mode => mode._id === paymentModeId);\n      return mode ? mode.name : '';\n    }\n  }\n};","map":{"version":3,"names":["addEditSubscriptionModal","magazineSubscriberService","subscriptionPlanService","paymentModeService","components","data","subscriber","activeSubscriptions","inactiveSubscriptions","subscriptionPlans","paymentModes","showAddEditSubscriptionModal","currentSubscription","created","loadSubscriber","loadSubscriptionPlans","loadPaymentModes","methods","subscriberId","$route","params","id","getMagazineSubscriberById","then","response","subscriptions","filter","sub","active","catch","error","console","getPlans","getPaymentModes","openAddSubscriptionModal","start_date","subscription_plan","payment_status","payment_mode","payment_date","openEditSubscriptionModal","subscription","closeAddEditSubscriptionModal","saveSubscription","_id","updateSubscription","createSubscription","getCategoryName","categoryId","category","categories","find","cat","name","getTypeName","typeId","type","types","typ","getPlanName","planId","plan","getPaymentModeName","paymentModeId","mode"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscriberDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\r\n        <li class=\"breadcrumb-item\"><router-link to=\"/subscribers\">Subscribers</router-link></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ subscriber.name }}</li>\r\n      </ol>\r\n    </nav>\r\n    <h2>{{ subscriber.name }}</h2>\r\n    <div class=\"details\">\r\n      <p><strong>Registration Number:</strong> {{ subscriber.registration_number }}</p>\r\n      <p><strong>Address:</strong> {{ subscriber.address }}</p>\r\n      <p><strong>City/Town:</strong> {{ subscriber.city_town }}</p>\r\n      <p><strong>State:</strong> {{ subscriber.state }}</p>\r\n      <p><strong>Pincode:</strong> {{ subscriber.pincode }}</p>\r\n      <p><strong>Phone:</strong> {{ subscriber.phone }}</p>\r\n      <p><strong>Email:</strong> {{ subscriber.email }}</p>\r\n      <p><strong>Category:</strong> {{ getCategoryName(subscriber.category) }}</p>\r\n      <p><strong>Type:</strong> {{ getTypeName(subscriber.stype) }}</p>\r\n      <p><strong>Notes:</strong> {{ subscriber.notes }}</p>\r\n    </div>\r\n    <button class=\"btn btn-primary mb-3\" @click=\"openAddSubscriptionModal\">Add Subscription</button>\r\n\r\n    <!-- Tabs for Active and Inactive Subscriptions -->\r\n    <ul class=\"nav nav-tabs\" id=\"subscriptionTab\" role=\"tablist\">\r\n      <li class=\"nav-item\" role=\"presentation\">\r\n        <button class=\"nav-link active\" id=\"active-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#active\" type=\"button\" role=\"tab\" aria-controls=\"active\" aria-selected=\"true\">Active Subscriptions</button>\r\n      </li>\r\n      <li class=\"nav-item\" role=\"presentation\">\r\n        <button class=\"nav-link\" id=\"inactive-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#inactive\" type=\"button\" role=\"tab\" aria-controls=\"inactive\" aria-selected=\"false\">Inactive Subscriptions</button>\r\n      </li>\r\n    </ul>\r\n    <div class=\"tab-content\" id=\"subscriptionTabContent\">\r\n      <!-- Active Subscriptions Tab -->\r\n      <div class=\"tab-pane fade show active\" id=\"active\" role=\"tabpanel\" aria-labelledby=\"active-tab\">\r\n        <table class=\"table table-striped mt-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Start Date</th>\r\n              <th>Subscription Plan</th>\r\n              <th>Payment Status</th>\r\n              <th>Payment Mode</th>\r\n              <th>Payment Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"subscription in activeSubscriptions\" :key=\"subscription._id\">\r\n              <td>{{ subscription.start_date }}</td>\r\n              <td>{{ getPlanName(subscription.subscription_plan) }}</td>\r\n              <td>{{ subscription.payment_status }}</td>\r\n              <td>{{ getPaymentModeName(subscription.payment_mode) }}</td>\r\n              <td>{{ subscription.payment_date }}</td>\r\n              <td>\r\n                <button class=\"btn btn-secondary btn-sm\" @click=\"openEditSubscriptionModal(subscription)\">Edit</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <!-- Inactive Subscriptions Tab -->\r\n      <div class=\"tab-pane fade\" id=\"inactive\" role=\"tabpanel\" aria-labelledby=\"inactive-tab\">\r\n        <table class=\"table table-striped mt-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Start Date</th>\r\n              <th>Subscription Plan</th>\r\n              <th>Payment Status</th>\r\n              <th>Payment Mode</th>\r\n              <th>Payment Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"subscription in inactiveSubscriptions\" :key=\"subscription._id\">\r\n              <td>{{ subscription.start_date }}</td>\r\n              <td>{{ getPlanName(subscription.subscription_plan) }}</td>\r\n              <td>{{ subscription.payment_status }}</td>\r\n              <td>{{ getPaymentModeName(subscription.payment_mode) }}</td>\r\n              <td>{{ subscription.payment_date }}</td>\r\n              <td>\r\n                <button class=\"btn btn-secondary btn-sm\" @click=\"openEditSubscriptionModal(subscription)\">Edit</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add/Edit Subscription Modal -->\r\n    <add-edit-subscription-modal\r\n      :show=\"showAddEditSubscriptionModal\"\r\n      :subscription=\"currentSubscription\"\r\n      :subscription-plans=\"subscriptionPlans\"\r\n      :payment-modes=\"paymentModes\"\r\n      @close=\"closeAddEditSubscriptionModal\"\r\n      @save=\"saveSubscription\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport addEditSubscriptionModal from './AddEditSubscriptionModal.vue';\r\nimport magazineSubscriberService from '../services/magazineSubscriberService';\r\nimport subscriptionPlanService from '../services/subscriptionPlanService';\r\nimport paymentModeService from '../services/paymentModeService';\r\n\r\nexport default {\r\n  components: {\r\n    addEditSubscriptionModal\r\n  },\r\n  data() {\r\n    return {\r\n      subscriber: {},\r\n      activeSubscriptions: [],\r\n      inactiveSubscriptions: [],\r\n      subscriptionPlans: [],\r\n      paymentModes: [],\r\n      showAddEditSubscriptionModal: false,\r\n      currentSubscription: null\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSubscriber();\r\n    this.loadSubscriptionPlans();\r\n    this.loadPaymentModes();\r\n  },\r\n  methods: {\r\n    loadSubscriber() {\r\n      const subscriberId = this.$route.params.id;\r\n      magazineSubscriberService.getMagazineSubscriberById(subscriberId).then(response => {\r\n        this.subscriber = response.data;\r\n        this.activeSubscriptions = this.subscriber.subscriptions.filter(sub => sub.active);\r\n        this.inactiveSubscriptions = this.subscriber.subscriptions.filter(sub => !sub.active);\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscriber details!\", error);\r\n      });\r\n    },\r\n    loadSubscriptionPlans() {\r\n      subscriptionPlanService.getPlans().then(response => {\r\n        this.subscriptionPlans = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the subscription plans!\", error);\r\n      });\r\n    },\r\n    loadPaymentModes() {\r\n      paymentModeService.getPaymentModes().then(response => {\r\n        this.paymentModes = response.data;\r\n      }).catch(error => {\r\n        console.error(\"There was an error retrieving the payment modes!\", error);\r\n      });\r\n    },\r\n    openAddSubscriptionModal() {\r\n      this.currentSubscription = {\r\n        start_date: '',\r\n        subscription_plan: '',\r\n        payment_status: 'Pending',\r\n        payment_mode: '',\r\n        payment_date: ''\r\n      };\r\n      this.showAddEditSubscriptionModal = true;\r\n    },\r\n    openEditSubscriptionModal(subscription) {\r\n      this.currentSubscription = { ...subscription };\r\n      this.showAddEditSubscriptionModal = true;\r\n    },\r\n    closeAddEditSubscriptionModal() {\r\n      this.showAddEditSubscriptionModal = false;\r\n    },\r\n    saveSubscription(subscription) {\r\n      subscription.subscriber = this.subscriber._id;\r\n      if (subscription._id) {\r\n        magazineSubscriberService.updateSubscription(subscription._id, subscription).then(() => {\r\n          this.loadSubscriber();\r\n        }).catch(error => {\r\n          console.error(\"There was an error updating the subscription!\", error);\r\n        });\r\n      } else {\r\n        magazineSubscriberService.createSubscription(subscription).then(() => {\r\n          this.loadSubscriber();\r\n        }).catch(error => {\r\n          console.error(\"There was an error creating the subscription!\", error);\r\n        });\r\n      }\r\n      this.closeAddEditSubscriptionModal();\r\n    },\r\n    getCategoryName(categoryId) {\r\n      const category = this.categories.find(cat => cat._id === categoryId);\r\n      return category ? category.name : '';\r\n    },\r\n    getTypeName(typeId) {\r\n      const type = this.types.find(typ => typ._id === typeId);\r\n      return type ? type.name : '';\r\n    },\r\n    getPlanName(planId) {\r\n      const plan = this.subscriptionPlans.find(plan => plan._id === planId);\r\n      return plan ? plan.name : '';\r\n    },\r\n    getPaymentModeName(paymentModeId) {\r\n      const mode = this.paymentModes.find(mode => mode._id === paymentModeId);\r\n      return mode ? mode.name : '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.details {\r\n  margin-top: 20px;\r\n}\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}