{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AddEditSubscriberModal from './AddEditSubscriberModal.vue';\nimport magazineSubscriberService from '@/services/magazineSubscriberService';\nexport default {\n  components: {\n    AddEditSubscriberModal\n  },\n  data() {\n    return {\n      subscribers: [],\n      fields: ['name', 'registration_number', 'actions'],\n      showAddEditModal: false,\n      currentSubscriber: null\n    };\n  },\n  methods: {\n    fetchSubscribers() {\n      magazineSubscriberService.getMagazineSubscribers().then(response => {\n        this.subscribers = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    openAddSubscriberModal() {\n      this.currentSubscriber = {};\n      this.showAddEditModal = true;\n    },\n    editSubscriber(subscriber) {\n      this.currentSubscriber = {\n        ...subscriber\n      };\n      this.showAddEditModal = true;\n    },\n    saveSubscriber(subscriber) {\n      if (subscriber._id) {\n        magazineSubscriberService.updateMagazineSubscriber(subscriber._id, subscriber).then(() => {\n          this.fetchSubscribers();\n          this.showAddEditModal = false;\n        }).catch(error => {\n          console.error(error);\n        });\n      } else {\n        magazineSubscriberService.createMagazineSubscriber(subscriber).then(() => {\n          this.fetchSubscribers();\n          this.showAddEditModal = false;\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    cancelEdit() {\n      this.showAddEditModal = false;\n    },\n    deleteSubscriber(id) {\n      if (confirm('Are you sure you want to delete this subscriber?')) {\n        magazineSubscriberService.deleteMagazineSubscriber(id).then(() => {\n          this.fetchSubscribers();\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    viewSubscriber(subscriber) {\n      this.$router.push({\n        name: 'SubscriberDetails',\n        params: {\n          id: subscriber._id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchSubscribers();\n  }\n};","map":{"version":3,"names":["AddEditSubscriberModal","magazineSubscriberService","components","data","subscribers","fields","showAddEditModal","currentSubscriber","methods","fetchSubscribers","getMagazineSubscribers","then","response","catch","error","console","openAddSubscriberModal","editSubscriber","subscriber","saveSubscriber","_id","updateMagazineSubscriber","createMagazineSubscriber","cancelEdit","deleteSubscriber","id","confirm","deleteMagazineSubscriber","viewSubscriber","$router","push","name","params","mounted"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\MagazineSubscribers.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <b-breadcrumb>\r\n      <b-breadcrumb-item href=\"/\">Home</b-breadcrumb-item>\r\n      <b-breadcrumb-item active>Magazine Subscribers</b-breadcrumb-item>\r\n    </b-breadcrumb>\r\n    <h1>Magazine Subscribers</h1>\r\n    <b-button @click=\"openAddSubscriberModal\">Add Subscriber</b-button>\r\n    <b-table :items=\"subscribers\" :fields=\"fields\">\r\n      <template #cell(actions)=\"row\">\r\n        <b-button @click=\"editSubscriber(row.item)\">Edit</b-button>\r\n        <b-button @click=\"deleteSubscriber(row.item._id)\">Delete</b-button>\r\n        <b-button @click=\"viewSubscriber(row.item)\">View</b-button>\r\n      </template>\r\n    </b-table>\r\n    <add-edit-subscriber-modal\r\n      ref=\"addEditSubscriberModal\"\r\n      :show-modal=\"showAddEditModal\"\r\n      :subscriber=\"currentSubscriber\"\r\n      @save=\"saveSubscriber\"\r\n      @cancel=\"cancelEdit\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddEditSubscriberModal from './AddEditSubscriberModal.vue';\r\nimport magazineSubscriberService from '@/services/magazineSubscriberService';\r\n\r\nexport default {\r\n  components: {\r\n    AddEditSubscriberModal,\r\n  },\r\n  data() {\r\n    return {\r\n      subscribers: [],\r\n      fields: ['name', 'registration_number', 'actions'],\r\n      showAddEditModal: false,\r\n      currentSubscriber: null,\r\n    };\r\n  },\r\n  methods: {\r\n    fetchSubscribers() {\r\n      magazineSubscriberService.getMagazineSubscribers()\r\n        .then(response => {\r\n          this.subscribers = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    openAddSubscriberModal() {\r\n      this.currentSubscriber = {};\r\n      this.showAddEditModal = true;\r\n    },\r\n    editSubscriber(subscriber) {\r\n      this.currentSubscriber = { ...subscriber };\r\n      this.showAddEditModal = true;\r\n    },\r\n    saveSubscriber(subscriber) {\r\n      if (subscriber._id) {\r\n        magazineSubscriberService.updateMagazineSubscriber(subscriber._id, subscriber)\r\n          .then(() => {\r\n            this.fetchSubscribers();\r\n            this.showAddEditModal = false;\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      } else {\r\n        magazineSubscriberService.createMagazineSubscriber(subscriber)\r\n          .then(() => {\r\n            this.fetchSubscribers();\r\n            this.showAddEditModal = false;\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      this.showAddEditModal = false;\r\n    },\r\n    deleteSubscriber(id) {\r\n      if (confirm('Are you sure you want to delete this subscriber?')) {\r\n        magazineSubscriberService.deleteMagazineSubscriber(id)\r\n          .then(() => {\r\n            this.fetchSubscribers();\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    },\r\n    viewSubscriber(subscriber) {\r\n      this.$router.push({ name: 'SubscriberDetails', params: { id: subscriber._id } });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchSubscribers();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA0BA,OAAOA,sBAAqB,MAAO,8BAA8B;AACjE,OAAOC,yBAAwB,MAAO,sCAAsC;AAE5E,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,CAAC,MAAM,EAAE,qBAAqB,EAAE,SAAS,CAAC;MAClDC,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAAA,EAAG;MACjBR,yBAAyB,CAACS,sBAAsB,CAAC,EAC9CC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,WAAU,GAAIQ,QAAQ,CAACT,IAAI;MAClC,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACDE,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACT,iBAAgB,GAAI,CAAC,CAAC;MAC3B,IAAI,CAACD,gBAAe,GAAI,IAAI;IAC9B,CAAC;IACDW,cAAcA,CAACC,UAAU,EAAE;MACzB,IAAI,CAACX,iBAAgB,GAAI;QAAE,GAAGW;MAAW,CAAC;MAC1C,IAAI,CAACZ,gBAAe,GAAI,IAAI;IAC9B,CAAC;IACDa,cAAcA,CAACD,UAAU,EAAE;MACzB,IAAIA,UAAU,CAACE,GAAG,EAAE;QAClBnB,yBAAyB,CAACoB,wBAAwB,CAACH,UAAU,CAACE,GAAG,EAAEF,UAAU,EAC1EP,IAAI,CAAC,MAAM;UACV,IAAI,CAACF,gBAAgB,CAAC,CAAC;UACvB,IAAI,CAACH,gBAAe,GAAI,KAAK;QAC/B,CAAC,EACAO,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACN,OAAO;QACLb,yBAAyB,CAACqB,wBAAwB,CAACJ,UAAU,EAC1DP,IAAI,CAAC,MAAM;UACV,IAAI,CAACF,gBAAgB,CAAC,CAAC;UACvB,IAAI,CAACH,gBAAe,GAAI,KAAK;QAC/B,CAAC,EACAO,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACN;IACF,CAAC;IACDS,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,gBAAe,GAAI,KAAK;IAC/B,CAAC;IACDkB,gBAAgBA,CAACC,EAAE,EAAE;MACnB,IAAIC,OAAO,CAAC,kDAAkD,CAAC,EAAE;QAC/DzB,yBAAyB,CAAC0B,wBAAwB,CAACF,EAAE,EAClDd,IAAI,CAAC,MAAM;UACV,IAAI,CAACF,gBAAgB,CAAC,CAAC;QACzB,CAAC,EACAI,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACN;IACF,CAAC;IACDc,cAAcA,CAACV,UAAU,EAAE;MACzB,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,MAAM,EAAE;UAAEP,EAAE,EAAEP,UAAU,CAACE;QAAI;MAAE,CAAC,CAAC;IAClF;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxB,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}