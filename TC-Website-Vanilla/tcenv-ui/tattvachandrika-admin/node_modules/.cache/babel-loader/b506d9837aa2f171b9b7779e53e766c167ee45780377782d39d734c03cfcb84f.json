{"ast":null,"code":"import subscriberService from '../services/magazineSubscriberService';\nimport subscriptionService from '../services/subscriptionService';\nimport confirmationModal from './ConfirmationModal.vue';\nimport subscriptionModal from './SubscriptionModal.vue';\nexport default {\n  components: {\n    confirmationModal,\n    subscriptionModal\n  },\n  data() {\n    return {\n      subscriber: {},\n      activeSubscriptions: [],\n      inactiveSubscriptions: [],\n      showConfirmationModal: false,\n      showSubscriptionModal: false,\n      subscriptionToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscriber();\n    this.loadSubscriptions();\n  },\n  methods: {\n    loadSubscriber() {\n      const subscriberId = this.$route.params.id;\n      subscriberService.getSubscriber(subscriberId).then(response => {\n        this.subscriber = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber!\", error);\n      });\n    },\n    loadSubscriptions() {\n      const subscriberId = this.$route.params.id;\n      subscriptionService.getSubscriptions(subscriberId).then(response => {\n        this.activeSubscriptions = response.data.filter(sub => sub.active);\n        this.inactiveSubscriptions = response.data.filter(sub => !sub.active);\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriptions!\", error);\n      });\n    },\n    startAddingSubscription() {\n      this.showSubscriptionModal = true;\n    },\n    saveSubscription(subscription) {\n      subscriptionService.createSubscription(subscription).then(() => {\n        this.loadSubscriptions();\n        this.showSubscriptionModal = false;\n      }).catch(error => {\n        console.error(\"There was an error creating the subscription!\", error);\n      });\n    },\n    showDeleteModal(subscriptionId) {\n      this.subscriptionToDelete = subscriptionId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n      this.subscriptionToDelete = null;\n    },\n    deleteSubscription() {\n      subscriptionService.deleteSubscription(this.subscriptionToDelete).then(() => {\n        this.loadSubscriptions();\n        this.hideDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat._id === categoryId);\n      return category ? category.name : '';\n    },\n    getTypeName(typeId) {\n      const type = this.types.find(typ => typ._id === typeId);\n      return type ? type.name : '';\n    }\n  }\n};","map":{"version":3,"names":["subscriberService","subscriptionService","confirmationModal","subscriptionModal","components","data","subscriber","activeSubscriptions","inactiveSubscriptions","showConfirmationModal","showSubscriptionModal","subscriptionToDelete","created","loadSubscriber","loadSubscriptions","methods","subscriberId","$route","params","id","getSubscriber","then","response","catch","error","console","getSubscriptions","filter","sub","active","startAddingSubscription","saveSubscription","subscription","createSubscription","showDeleteModal","subscriptionId","hideDeleteModal","deleteSubscription","getCategoryName","categoryId","category","categories","find","cat","_id","name","getTypeName","typeId","type","types","typ"],"sources":["C:\\Users\\santoshdesai\\Tattvachandrika\\tcenv-ui\\tattvachandrika-admin\\src\\components\\SubscriberDetails.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Subscriber Details</h2>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><router-link to=\"/\">Home</router-link></li>\n        <li class=\"breadcrumb-item\"><router-link to=\"/subscribers\">Subscribers</router-link></li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ subscriber.name }}</li>\n      </ol>\n    </nav>\n    <div>\n      <p><strong>Name:</strong> {{ subscriber.name }}</p>\n      <p><strong>Registration Number:</strong> {{ subscriber.registration_number }}</p>\n      <p><strong>City/Town:</strong> {{ subscriber.city_town }}</p>\n      <p><strong>State:</strong> {{ subscriber.state }}</p>\n      <p><strong>Phone:</strong> {{ subscriber.phone }}</p>\n      <p><strong>Email:</strong> {{ subscriber.email }}</p>\n      <p><strong>Category:</strong> {{ getCategoryName(subscriber.category) }}</p>\n      <p><strong>Type:</strong> {{ getTypeName(subscriber.stype) }}</p>\n    </div>\n\n    <b-tabs>\n      <b-tab title=\"Active Subscriptions\" active>\n        <table class=\"table table-striped mt-4\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Price</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"subscription in activeSubscriptions\" :key=\"subscription._id\">\n              <td>{{ subscription.subscription_plan.name }}</td>\n              <td>{{ subscription.start_date }}</td>\n              <td>{{ subscription.end_date }}</td>\n              <td>{{ subscription.subscription_plan.subscription_price }}</td>\n              <td>\n                <button class=\"btn btn-danger btn-sm\" @click=\"showDeleteModal(subscription._id)\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </b-tab>\n      <b-tab title=\"Inactive Subscriptions\">\n        <table class=\"table table-striped mt-4\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"subscription in inactiveSubscriptions\" :key=\"subscription._id\">\n              <td>{{ subscription.subscription_plan.name }}</td>\n              <td>{{ subscription.start_date }}</td>\n              <td>{{ subscription.end_date }}</td>\n              <td>{{ subscription.subscription_plan.subscription_price }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </b-tab>\n    </b-tabs>\n\n    <button class=\"btn btn-success mt-3\" @click=\"startAddingSubscription\">Add Subscription</button>\n\n    <confirmation-modal\n      v-if=\"showConfirmationModal\"\n      :show=\"showConfirmationModal\"\n      title=\"Confirm Delete\"\n      message=\"Are you sure you want to delete this subscription?\"\n      @close=\"hideDeleteModal\"\n      @confirm=\"deleteSubscription\"\n    />\n\n    <subscription-modal\n      v-if=\"showSubscriptionModal\"\n      :show=\"showSubscriptionModal\"\n      :subscriber-id=\"subscriber._id\"\n      @close=\"hideSubscriptionModal\"\n      @save=\"saveSubscription\"\n    />\n  </div>\n</template>\n\n<script>\nimport subscriberService from '../services/magazineSubscriberService';\nimport subscriptionService from '../services/subscriptionService';\nimport confirmationModal from './ConfirmationModal.vue';\nimport subscriptionModal from './SubscriptionModal.vue';\n\nexport default {\n  components: {\n    confirmationModal,\n    subscriptionModal\n  },\n  data() {\n    return {\n      subscriber: {},\n      activeSubscriptions: [],\n      inactiveSubscriptions: [],\n      showConfirmationModal: false,\n      showSubscriptionModal: false,\n      subscriptionToDelete: null\n    };\n  },\n  created() {\n    this.loadSubscriber();\n    this.loadSubscriptions();\n  },\n  methods: {\n    loadSubscriber() {\n      const subscriberId = this.$route.params.id;\n      subscriberService.getSubscriber(subscriberId).then(response => {\n        this.subscriber = response.data;\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriber!\", error);\n      });\n    },\n    loadSubscriptions() {\n      const subscriberId = this.$route.params.id;\n      subscriptionService.getSubscriptions(subscriberId).then(response => {\n        this.activeSubscriptions = response.data.filter(sub => sub.active);\n        this.inactiveSubscriptions = response.data.filter(sub => !sub.active);\n      }).catch(error => {\n        console.error(\"There was an error retrieving the subscriptions!\", error);\n      });\n    },\n    startAddingSubscription() {\n      this.showSubscriptionModal = true;\n    },\n    saveSubscription(subscription) {\n      subscriptionService.createSubscription(subscription).then(() => {\n        this.loadSubscriptions();\n        this.showSubscriptionModal = false;\n      }).catch(error => {\n        console.error(\"There was an error creating the subscription!\", error);\n      });\n    },\n    showDeleteModal(subscriptionId) {\n      this.subscriptionToDelete = subscriptionId;\n      this.showConfirmationModal = true;\n    },\n    hideDeleteModal() {\n      this.showConfirmationModal = false;\n      this.subscriptionToDelete = null;\n    },\n    deleteSubscription() {\n      subscriptionService.deleteSubscription(this.subscriptionToDelete).then(() => {\n        this.loadSubscriptions();\n        this.hideDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the subscription!\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat._id === categoryId);\n      return category ? category.name : '';\n    },\n    getTypeName(typeId) {\n      const type = this.types.find(typ => typ._id === typeId);\n      return type ? type.name : '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}